package routers

import (
	"github.com/gofiber/fiber/v2"
	handlers "lms/handles"
)

func Router(app *fiber.App) {
	app.Use(PageErrorMiddleware)
	app.Get("", handlers.GetLogin)
	app.Get("/login", handlers.GetLogin)
	app.Get("/signup", handlers.GetSignup)
	app.Post("/logout", handlers.GetLogout)
	app.Get("/logout", handlers.GetLogout)
	app.Get("/reset-password/:id/:token", handlers.ApiPostActivationPassword)
	app.Get("/update-email/:id/:token/:email", handlers.ApiConfirmEmail)
	app.Get("/auth/google", handlers.GoogleLogin)
	app.Get("/auth/google/callback", handlers.GoogleCallback)

	app.Get("/dashboard", IsAuthenticated, handlers.GetDashboard)

	users := app.Group("/users", IsAuthenticated, PermissionManagerUsers)
	users.Get("", handlers.GetUsers)
	users.Post("/create", handlers.CreateUser)
	users.Put("/update/:id", handlers.UpdateUser)
}

func API(app *fiber.App) {
	apiV1 := app.Group("/api/v1", ErrorMiddleware)
	apiV1.Post("/login", handlers.ApiPostLogin)
	apiV1.Post("/signup", handlers.ApiPostSignup)
	apiV1.Post("/logout", handlers.ApiPostLogout)
	apiV1.Post("/forget-password", handlers.ApiPostForgetPassword)
	apiV1.Post("/resend-activation", handlers.ApiPostActivation)
	apiV1.Get("/resend-activation/:id/token/:token", handlers.CheckToken)

	users := apiV1.Group("/users", IsAuthenticated)
	users.Get("", handlers.ApiGetUsers)
	users.Get("/:id", handlers.ApiGetUserByID)
	users.Put("/:id", handlers.ApiUpdateUsers)
	users.Post("/create", handlers.ApiCreateUsers)
	users.Delete("/:id", handlers.ApiDeleteUser)
	users.Put("/:id/change_password", handlers.ApiChangePassword)
	users.Post("/fake-data-user", handlers.FakeDataUser)
	//
	//users.Get("/:id/courses", handlers.ApiGetCoursesByUserID)
	//users.Get("/:id/lesson_process", handlers.ApiGetCompletedLessons)
	//users.Get("/:id/assignments_process", handlers.ApiGetCompletedAssignment)
	//users.Get("/:id/course_process", handlers.ApiGetCompletedCourse)
	//users.Get("/:id/courses/:course_id/lessons", handlers.ApiGetCourseLessons)
	//users.Get("/:id/lessons/:lesson_id/assignments", handlers.ApiGetUserAssignmentByLessonIDAndUserID)
	//users.Get("/:id/learning_process", handlers.ApiGetLearningProcessByUser)
	//users.Get("/:id/courses/:course_id/statisticsCourse", handlers.ApiGetStatisticsCourse)
	//users.Get("/:id/lessons/:lesson_id/statisticsLesson", handlers.ApiGetStatisticsLesson)

	//users.Get("/:id/courses/:course_id/lessons/:lesson_id/assignments")

	roles := apiV1.Group("/roles", IsAuthenticated)
	roles.Get("", handlers.ApiGetRoles)
	roles.Post("create", handlers.ApiCreateRole)
	roles.Delete("/:id", handlers.ApiDeleteRole)
	roles.Get("/:id", handlers.ApiGetRoleByID)
	roles.Put("/:id", handlers.ApiUpdateRole)

	typeUsers := apiV1.Group("/type_users", IsAuthenticated)
	typeUsers.Get("", handlers.ApiGetTypeUsers)
	typeUsers.Get("/:id", handlers.ApiGetTypeUserByID)
	typeUsers.Put("/:id", handlers.ApiUpdateTypeUser)
	typeUsers.Post("", handlers.ApiCreateTypeUser)
	typeUsers.Delete("/:id", handlers.ApiDeleteTypeUser)

	permissions := apiV1.Group("/permissions", IsAuthenticated)
	permissions.Get("", handlers.ApiGetPermissions)

	//courses := apiV1.Group("/courses", IsAuthenticated)
	//courses.Get("", handlers.ApiGetCourses)
	//courses.Get("/:id", handlers.ApiGetCourseById)
	//courses.Post("", handlers.ApiCreateCourse)
	//courses.Put("/:id", handlers.ApiUpdateCourse)
	//courses.Delete("", handlers.DeleteMultipleCourses)
	//courses.Delete("/:id", handlers.ApiDeleteCourse)
	//courses.Get("/:id/teachers", handlers.ApiGetTeachersByCourseID)
	//courses.Get("/:id/students", handlers.ApiGetStudentsByCourseID)
	//courses.Post("/:id/teachers", handlers.ApiAddTeacherToCourse)
	//courses.Post("/:id/students", handlers.ApiAddStudentToCourse)
	//courses.Get("/:id/teachers_not_course", handlers.ApiGetTeacherNotInCourse)
	//courses.Get("/:id/students_not_course", handlers.ApiGetStudentNotInCourse)
	//courses.Delete("/:id/remove_user", handlers.ApiRemoveUserFromCourse)
	//
	//studentCourses := apiV1.Group("/student_courses", IsAuthenticated)
	//studentCourses.Get("courses/:course_id/posts/:id/details", handlers.ApiGetStudentPostDetails)
	//studentCourses.Get("courses/:course_id/assignments/:id/details", handlers.ApiGetStudentAssignmentDetails)
	//studentCourses.Post("/assignment", handlers.ApiSubmitAssignment)
	//studentCourses.Post("courses/:courseID/assignment/:id", CheckCourseStatus, handlers.ApiReturnSubmitAssignment)
	//studentCourses.Get("/:course_id/certification", handlers.ApiGetCertification)
	//studentCourses.Get("/posts/:id/details", handlers.ApiGetStudentPostDetails)
	//
	//requestCourse := apiV1.Group("/request-course", IsAuthenticated)
	//requestCourse.Get("/:id/:course_id", handlers.GetReqJoinCourse)
	//requestCourse.Post("", handlers.PostReqJoinCourse)
	//
	//programs := apiV1.Group("/programs", IsAuthenticated)
	//programs.Get("", handlers.ApiGetPrograms)
	//programs.Get("/:id", handlers.ApiGetProgramByID)
	//programs.Delete("/:id", handlers.ApiDeleteProgram)
	//programs.Put("/:id", handlers.ApiUpdateProgram)
	//programs.Post("", handlers.ApiCreateProgram)
	//programs.Get("/prerequisite-course/:id", handlers.ApiGetPrerequisiteCourse)
	//programs.Get("/:id/courses", handlers.ApiGetCourseInProgram)
	//
	//studentProgram := apiV1.Group("/student_programs", IsAuthenticated)
	//studentProgram.Get("", handlers.ApiGetStudentProgram)
	//
	//requestProgram := apiV1.Group("/request-program", IsAuthenticated)
	//requestProgram.Post("", handlers.PostReqJoinProgram)
	//
	//courseCategories := apiV1.Group("/course_categories", IsAuthenticated)
	//courseCategories.Get("", handlers.ApiGetCourseCategory)
	//courseCategories.Post("", handlers.ApiCreateCourseCategory)
	//courseCategories.Delete("/:id", handlers.ApiDeleteCourseCategory)
	//courseCategories.Put("/:id", handlers.ApiUpdateCourseCategory)
	//courseCategories.Get("/:id", handlers.ApiGetCourseCategoryByID)
	//
	//levels := apiV1.Group("/levels", IsAuthenticated)
	//levels.Get("", handlers.ApiGetLevel)
	//levels.Get("/:id", handlers.ApiGetLevelByID)
	//levels.Delete("/:id", handlers.ApiDeleteLevel)
	//levels.Put("/:id", handlers.ApiUpdateLevel)
	//levels.Post("", handlers.ApiCreateLevel)
	//
	//challenges := apiV1.Group("/challenges", IsAuthenticated)
	//challenges.Get("", handlers.ApiGetChallenge)
	//challenges.Put("/:id", handlers.ApiUpdateChallenge)
	//challenges.Delete("/:id", handlers.ApiDeleteChallenge)
	//challenges.Get("/:id", handlers.ApiGetChallengeByID)
	//challenges.Post("", handlers.ApiCreateChallenge)
	//
	//lessons := apiV1.Group("/lessons", IsAuthenticated)
	//lessons.Get("", handlers.ApiGetLessons)
	//lessons.Get("/details/:id", handlers.GetLessonByID)
	//lessons.Get("/:id", handlers.ApiGetLessonByCourseID)
	//lessons.Post("", handlers.CreateLesson)
	//lessons.Put("/:id", handlers.UpdateLesson)
	//lessons.Delete("/:id", handlers.DeleteLesson)
	//
	//lessonCategories := apiV1.Group("/lesson-categories", IsAuthenticated)
	//lessonCategories.Get("", handlers.ApiGetLessonCategory)
	//lessonCategories.Post("", handlers.ApiCreateLessonCategory)
	//lessonCategories.Put("/:id", handlers.ApiUpdateLessonCategory)
	//lessonCategories.Delete("/:id", handlers.ApiDeleteLessonCategory)
	//lessonCategories.Get("/:id", handlers.ApiGetLessonCategoryByID)
	//
	//assignments := apiV1.Group("/assignments", IsAuthenticated)
	//assignments.Get("", handlers.ApiGetAssignments)
	//assignments.Get("/:id", handlers.ApiGetAssignmentByLessonID)
	//assignments.Get("/details/:id", handlers.GetAssignmentByID)
	//assignments.Post("", handlers.CreateAssignment)
	//assignments.Put("/upload/:id", handlers.UpdateAssignment)
	//assignments.Delete("/:id", handlers.DeleteAssignment)
	//assignments.Post("/assign_topic", handlers.ApiAssignTopicToAssignment)
	//assignments.Get("/:id/topic", handlers.ApiGetTopicByAssignmentID)
	//
	//fileAssignments := apiV1.Group("/file-assignments", IsAuthenticated)
	//fileAssignments.Get("/:id", handlers.ApiGetFileAssignmentByAssignmentID)
	//fileAssignments.Delete("/:id", handlers.ApiDeleteFilesByAssignmentID)
	//
	//posts := apiV1.Group("/posts", IsAuthenticated)
	//posts.Get("", handlers.ApiGetPosts)
	//posts.Get("/:id", handlers.ApiGetPostByLessonID)
	//posts.Get("/details/:id", handlers.GetPostByID)
	//posts.Post("", handlers.CreatePost)
	//posts.Put("/:id", handlers.UpdatePost)
	//posts.Delete("/:id", handlers.DeletePost)
	//posts.Get("/comment/:id", handlers.ApiGetPostComment)
	//
	//news := apiV1.Group("/news", IsAuthenticated)
	//news.Get("", handlers.ApiGetNews)
	//news.Get("/:id", handlers.GetNewsByID)
	//news.Get("/details/:id", handlers.GetNewsByID)
	//news.Post("", handlers.CreateNews)
	//news.Put("/:id", handlers.UpdateNews)
	//news.Delete("/:id", handlers.DeleteNews)
	//news.Get("/comment/:id", handlers.ApiGetNewsComment)
	//
	//banners := apiV1.Group("/banners", IsAuthenticated)
	//banners.Get("", handlers.ApiGetBanners)
	////banners.Get("/:id", handlers.GetNewsByID)
	//banners.Get("/details/:id", handlers.GetBannerByID)
	//banners.Post("", handlers.CreateBanner)
	//banners.Put("/:id", handlers.UpdateBanner)
	//banners.Delete("/:id", handlers.DeleteBanner)
	//
	//faqs := apiV1.Group("/faqs", IsAuthenticated)
	//faqs.Get("", handlers.ApiGetFaqs)
	//faqs.Get("/displayed", handlers.ApiGetDisplayedFaqs)
	//faqs.Get("/details/:id", handlers.GetFaqByID)
	//faqs.Post("", handlers.CreateFaq)
	//faqs.Put("/:id", handlers.UpdateFaq)
	//faqs.Delete("/:id", handlers.DeleteFaq)
	//
	//feedback := apiV1.Group("/feedback", IsAuthenticated)
	//feedback.Get("", handlers.ApiGetFeedback)
	//feedback.Post("", handlers.PostFeedback)
	//
	//filePosts := apiV1.Group("/file-posts", IsAuthenticated)
	//filePosts.Get("/:id", handlers.ApiGetFilePostByPostID)
	//filePosts.Delete("/:id", handlers.ApiDeletePostsByAssignmentID)
	////apiV1.Get("/:file_name", handlers.ApiGetFile)
	//
	//fileNews := apiV1.Group("/file-news", IsAuthenticated)
	//fileNews.Get("/:id", handlers.ApiGetFileNewsByNewsID)
	//fileNews.Delete("/:id", handlers.ApiDeleteFileNewsByAssignmentID)
	//
	//skills := apiV1.Group("/skills", IsAuthenticated)
	//skills.Get("", handlers.ApiGetSkill)
	//skills.Get("/:id", handlers.ApiGetSkillByID)
	//skills.Delete("/:id", handlers.ApiDeleteSkill)
	//skills.Put("/:id", handlers.ApiUpdateSkill)
	//skills.Post("", handlers.ApiCreateSkill)
	//
	//typeQuestions := apiV1.Group("/type-questions", IsAuthenticated)
	//typeQuestions.Get("", handlers.ApiGetTypeQuestion)
	//typeQuestions.Get("/:id", handlers.ApiGetTypeQuestionByID)
	//typeQuestions.Delete("/:id", handlers.ApiDeleteTypeQuestion)
	//typeQuestions.Put("/:id", handlers.ApiUpdateTypeQuestion)
	//typeQuestions.Post("", handlers.ApiCreateTypeQuestion)
	//
	//questions := apiV1.Group("/question_bank", IsAuthenticated)
	//questions.Get("/export", handlers.ApiExport)
	//questions.Get("", handlers.ApiGetQuestionBank)
	//questions.Post("", handlers.ApiCreateQuestionBank)
	//questions.Delete("/:id", handlers.ApiDeleteQuestion)
	//questions.Get("/:id", handlers.ApiGetQuestionById)
	//questions.Put("/:id", handlers.ApiUpdateQuestion)
	//questions.Get("/:id/options", handlers.ApiGetOptionByQuestionID)
	//questions.Put("/:id/options", handlers.ApiUpdateOptionsByQuestionID)
	//questions.Post("/search", handlers.ApiSearchQuestions)
	//questions.Post("/import", handlers.ApiImportQuestions)
	//
	//information := apiV1.Group("/information", IsAuthenticated)
	//information.Put("", handlers.ChangeEmail)
	//information.Put("/change-password", handlers.PutUserInformation)
	//
	//topics := apiV1.Group("/topics", IsAuthenticated)
	//topics.Get("", handlers.ApiGetTopics)
	//topics.Get("/:id", handlers.ApiGetTopicByID)
	//topics.Get("/:id/questions", handlers.ApiGetQuestionByTopicID)
	//topics.Get("/:id/student/questions/:assignment_id", handlers.ApiGetQuestionByTopicIDWithStudent)
	//topics.Get("/:id/student/questions/:assignment_id/:user_id", handlers.ApiGetQuestionByTopicIDWithUserID)
	//topics.Post("", handlers.ApiCreateTopic)
	//topics.Post("/:id/student/questions/:assignment_id", handlers.ApiPostQuestionByTopicIDWithStudent)
	//topics.Delete("/:id", handlers.ApiDeleteTopic)
	//topics.Delete("/:id/:assignmentID", handlers.ApiDeleteTopicAssignment)
	//topics.Put("/:id", handlers.ApiUpdateTopic)
	////topics.Post("", handlers.CreateTopic)
	//
	//comments := apiV1.Group("/courses/:courseID/comments", IsAuthenticated)
	//comments.Post("", CheckCourseStatus, handlers.ApiCreateComment)
	//comments.Delete("/:id", CheckCourseStatus, handlers.ApiDeleteComment)
	//
	//learningProcess := apiV1.Group("/learning-process", IsAuthenticated)
	//learningProcess.Get("", handlers.ApiGetLearningProcess)
	//
	//allCert := apiV1.Group("/all-cert", IsAuthenticated)
	//allCert.Get("", handlers.ApiGetAllCert)
	//
	//userAssignments := apiV1.Group("/user-assignments", IsAuthenticated)
	//userAssignments.Get("/:assignment_id", handlers.ApiGetStudentInAssignment)
	//userAssignments.Get("/:assignment_id/:user_id", handlers.ApiGetFileInStudentAssignment)
	//userAssignments.Put("/comment", handlers.ApiPutCommentAssignment)
	//userAssignments.Put("/cancel-submission", handlers.ApiPutCancelAssignment)
	//
	//dashboard := apiV1.Group("/dashboard", IsAuthenticated)
	//dashboard.Get("", handlers.ApiGetDashboard)
	//
	//apiV1.Get("/search/:q", IsAuthenticated, handlers.ApiSearchPrograms)
}
