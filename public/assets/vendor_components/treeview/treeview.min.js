var gj = { widget: function () { this.xhr = null, this.generateGUID = function () { function e() { return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1) } return e() + e() + "-" + e() + "-" + e() + "-" + e() + "-" + e() + e() + e() }, this.mouseX = function (e) { if (e) { if (e.pageX) return e.pageX; if (e.clientX) return e.clientX + (document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft); if (e.touches && e.touches.length) return e.touches[0].pageX; if (e.changedTouches && e.changedTouches.length) return e.changedTouches[0].pageX; if (e.originalEvent && e.originalEvent.touches && e.originalEvent.touches.length) return e.originalEvent.touches[0].pageX; if (e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches.length) return e.originalEvent.touches[0].pageX } return null }, this.mouseY = function (e) { if (e) { if (e.pageY) return e.pageY; if (e.clientY) return e.clientY + (document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop); if (e.touches && e.touches.length) return e.touches[0].pageY; if (e.changedTouches && e.changedTouches.length) return e.changedTouches[0].pageY; if (e.originalEvent && e.originalEvent.touches && e.originalEvent.touches.length) return e.originalEvent.touches[0].pageY; if (e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches.length) return e.originalEvent.touches[0].pageY } return null } } }; gj.widget.prototype.init = function (e, t) { var i, a, r; for (i in this.attr("data-type", t), a = $.extend(!0, {}, this.getHTMLConfig() || {}), $.extend(!0, a, e || {}), r = this.getConfig(a, t), this.attr("data-guid", r.guid), this.data(r), r) gj[t].events.hasOwnProperty(i) && (this.on(i, r[i]), delete r[i]); for (plugin in gj[t].plugins) gj[t].plugins.hasOwnProperty(plugin) && gj[t].plugins[plugin].configure(this, r, a); return this }, gj.widget.prototype.getConfig = function (e, t) { var i, a, r, n; for (n in i = $.extend(!0, {}, gj[t].config.base), a = e.hasOwnProperty("uiLibrary") ? e.uiLibrary : i.uiLibrary, gj[t].config[a] && $.extend(!0, i, gj[t].config[a]), r = e.hasOwnProperty("iconsLibrary") ? e.iconsLibrary : i.iconsLibrary, gj[t].config[r] && $.extend(!0, i, gj[t].config[r]), gj[t].plugins) gj[t].plugins.hasOwnProperty(n) && ($.extend(!0, i, gj[t].plugins[n].config.base), gj[t].plugins[n].config[a] && $.extend(!0, i, gj[t].plugins[n].config[a]), gj[t].plugins[n].config[r] && $.extend(!0, i, gj[t].plugins[n].config[r])); return $.extend(!0, i, e), i.guid || (i.guid = this.generateGUID()), i }, gj.widget.prototype.getHTMLConfig = function () { var e = this.data(), t = this[0].attributes; return t.width && (e.width = t.width.value), t.height && (e.height = t.height.value), t.value && (e.value = t.value.value), t.align && (e.align = t.align.value), e && e.source && (e.dataSource = e.source, delete e.source), e }, gj.widget.prototype.createDoneHandler = function () { var e = this; return function (t) { "string" == typeof t && JSON && (t = JSON.parse(t)), gj[e.data("type")].methods.render(e, t) } }, gj.widget.prototype.createErrorHandler = function () { return function (e) { e && e.statusText && "abort" !== e.statusText && alert(e.statusText) } }, gj.widget.prototype.reload = function (e) { var t, i, a = this.data(), r = this.data("type"); return void 0 === a.dataSource && gj[r].methods.useHtmlDataSource(this, a), $.extend(a.params, e), $.isArray(a.dataSource) ? (i = gj[r].methods.filter(this), gj[r].methods.render(this, i)) : "string" == typeof a.dataSource ? (t = { url: a.dataSource, data: a.params }, this.xhr && this.xhr.abort(), this.xhr = $.ajax(t).done(this.createDoneHandler()).fail(this.createErrorHandler())) : "object" == typeof a.dataSource && (a.dataSource.data || (a.dataSource.data = {}), $.extend(a.dataSource.data, a.params), "json" === (t = $.extend(!0, {}, a.dataSource)).dataType && "object" == typeof t.data && (t.data = JSON.stringify(t.data)), t.success || (t.success = this.createDoneHandler()), t.error || (t.error = this.createErrorHandler()), this.xhr && this.xhr.abort(), this.xhr = $.ajax(t)), this }, gj.documentManager = { events: {}, subscribeForEvent: function (e, t, i) { if (gj.documentManager.events[e] && 0 !== gj.documentManager.events[e].length) { if (gj.documentManager.events[e][t]) throw "Event " + e + ' for widget with guid="' + t + '" is already attached.'; gj.documentManager.events[e].push({ widgetId: t, callback: i }) } else gj.documentManager.events[e] = [{ widgetId: t, callback: i }], $(document).on(e, gj.documentManager.executeCallbacks) }, executeCallbacks: function (e) { var t = gj.documentManager.events[e.type]; if (t) for (var i = 0; i < t.length; i++)t[i].callback(e) }, unsubscribeForEvent: function (e, t) { var i = !1, a = gj.documentManager.events[e]; if (a) for (var r = 0; r < a.length; r++)a[r].widgetId === t && (a.splice(r, 1), i = !0, 0 === a.length && ($(document).off(e), delete gj.documentManager.events[e])); if (!i) throw 'The "' + e + '" for widget with guid="' + t + "\" can't be removed." } }, gj.core = { messages: { "en-us": { monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], monthShortNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], weekDaysMin: ["S", "M", "T", "W", "T", "F", "S"], weekDaysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], weekDays: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], am: "AM", pm: "PM", ok: "Ok", cancel: "Cancel", titleFormat: "mmmm yyyy" } }, parseDate: function (e, t, i) { var a, r, n, o, d = 0, s = 0, l = 1, g = 0, c = 0; if (e && "string" == typeof e) { if (/^\d+$/.test(e)) o = new Date(e); else if (e.indexOf("/Date(") > -1) o = new Date(parseInt(e.substr(6), 10)); else if (e) { for (n = t.split(/[\s,-\.\/\/\:]+/), (r = e.split(/[\s]+/)).length != n.length && (r = e.split(/[\s,-\.\/\/\:]+/)), a = 0; a < n.length; a++) ["d", "dd"].indexOf(n[a]) > -1 ? l = parseInt(r[a], 10) : ["m", "mm"].indexOf(n[a]) > -1 ? s = parseInt(r[a], 10) - 1 : "mmm" === n[a] ? s = gj.core.messages[i || "en-us"].monthShortNames.indexOf(r[a]) : "mmmm" === n[a] ? s = gj.core.messages[i || "en-us"].monthNames.indexOf(r[a]) : ["yy", "yyyy"].indexOf(n[a]) > -1 ? (d = parseInt(r[a], 10), "yy" === n[a] && (d += 2e3)) : ["h", "hh", "H", "HH"].indexOf(n[a]) > -1 ? g = parseInt(r[a], 10) : ["M", "MM"].indexOf(n[a]) > -1 && (c = parseInt(r[a], 10)); o = new Date(d, s, l, g, c) } } else "number" == typeof e ? o = new Date(e) : e instanceof Date && (o = e); return o }, formatDate: function (e, t, a) { var r, n, o = "", d = t.split(/[\s,-\.\/\/\:]+/), s = t.split(/s+|M+|H+|h+|t+|T+|d+|m+|y+/); for (s = s.splice(1, s.length - 2), i = 0; i < d.length; i++)switch (r = s[i] || "", d[i]) { case "s": o += e.getSeconds() + r; break; case "ss": o += gj.core.pad(e.getSeconds()) + r; break; case "M": o += e.getMinutes() + r; break; case "MM": o += gj.core.pad(e.getMinutes()) + r; break; case "H": o += e.getHours() + r; break; case "HH": o += gj.core.pad(e.getHours()) + r; break; case "h": o += (n = e.getHours() > 12 ? e.getHours() % 12 : e.getHours()) + r; break; case "hh": n = e.getHours() > 12 ? e.getHours() % 12 : e.getHours(), o += gj.core.pad(n) + r; break; case "tt": o += (e.getHours() >= 12 ? "pm" : "am") + r; break; case "TT": o += (e.getHours() >= 12 ? "PM" : "AM") + r; break; case "d": o += e.getDate() + r; break; case "dd": o += gj.core.pad(e.getDate()) + r; break; case "ddd": o += gj.core.messages[a || "en-us"].weekDaysShort[e.getDay()] + r; break; case "dddd": o += gj.core.messages[a || "en-us"].weekDays[e.getDay()] + r; break; case "m": o += e.getMonth() + 1 + r; break; case "mm": o += gj.core.pad(e.getMonth() + 1) + r; break; case "mmm": o += gj.core.messages[a || "en-us"].monthShortNames[e.getMonth()] + r; break; case "mmmm": o += gj.core.messages[a || "en-us"].monthNames[e.getMonth()] + r; break; case "yy": o += e.getFullYear().toString().substr(2) + r; break; case "yyyy": o += e.getFullYear() + r }return o }, pad: function (e, t) { for (e = String(e), t = t || 2; e.length < t;)e = "0" + e; return e }, center: function (e) { var t = $(window).width() / 2 - e.width() / 2, i = $(window).height() / 2 - e.height() / 2; e.css("position", "absolute"), e.css("left", t > 0 ? t : 0), e.css("top", i > 0 ? i : 0) }, isIE: function () { return !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g) }, setChildPosition: function (e, t) { var i = e.getBoundingClientRect(), a = gj.core.height(e, !0), r = gj.core.height(t, !0), n = gj.core.width(e, !0), o = gj.core.width(t, !0), d = window.scrollY || window.pageYOffset || 0, s = window.scrollX || window.pageXOffset || 0; i.top + a + r > window.innerHeight && i.top > r ? t.style.top = Math.round(i.top + d - r - 3) + "px" : t.style.top = Math.round(i.top + d + a + 3) + "px", i.left + o > document.body.clientWidth ? t.style.left = Math.round(i.left + s + n - o) + "px" : t.style.left = Math.round(i.left + s) + "px" }, height: function (e, t) { var i, a = window.getComputedStyle(e); return "border-box" === a.boxSizing ? (i = parseInt(a.height, 10), gj.core.isIE() && (i += parseInt(a.paddingTop || 0, 10) + parseInt(a.paddingBottom || 0, 10), i += parseInt(a.borderTopWidth || 0, 10) + parseInt(a.borderBottomWidth || 0, 10))) : (i = parseInt(a.height, 10), i += parseInt(a.paddingTop || 0, 10) + parseInt(a.paddingBottom || 0, 10), i += parseInt(a.borderTopWidth || 0, 10) + parseInt(a.borderBottomWidth || 0, 10)), t && (i += parseInt(a.marginTop || 0, 10) + parseInt(a.marginBottom || 0, 10)), i }, width: function (e, t) { var i, a = window.getComputedStyle(e); return "border-box" === a.boxSizing ? i = parseInt(a.width, 10) : (i = parseInt(a.width, 10), i += parseInt(a.paddingLeft || 0, 10) + parseInt(a.paddingRight || 0, 10), i += parseInt(a.borderLeftWidth || 0, 10) + parseInt(a.borderRightWidth || 0, 10)), t && (i += parseInt(a.marginLeft || 0, 10) + parseInt(a.marginRight || 0, 10)), i }, addClasses: function (e, t) { var i, a; if (t) for (a = t.split(" "), i = 0; i < a.length; i++)e.classList.add(a[i]) }, position: function (e) { for (var t, i, a = 0, r = 0, n = gj.core.height(e), o = gj.core.width(e); e;)"BODY" == e.tagName ? (t = e.scrollLeft || document.documentElement.scrollLeft, i = e.scrollTop || document.documentElement.scrollTop, a += e.offsetLeft - t, r += e.offsetTop - i) : (a += e.offsetLeft - e.scrollLeft, r += e.offsetTop - e.scrollTop), e = e.offsetParent; return { top: r, left: a, bottom: r + n, right: a + o } }, setCaretAtEnd: function (e) { var t; if (e) if (t = e.value.length, document.selection) { e.focus(); var i = document.selection.createRange(); i.moveStart("character", -t), i.moveStart("character", t), i.moveEnd("character", 0), i.select() } else (e.selectionStart || "0" == e.selectionStart) && (e.selectionStart = t, e.selectionEnd = t, e.focus()) }, getScrollParent: function (e) { return null == e ? null : e.scrollHeight > e.clientHeight ? e : gj.core.getScrollParent(e.parentNode) } }, gj.picker = { messages: { "en-us": {} } }, gj.picker.methods = { initialize: function (e, t, i) { var a, r = i.createPicker(e, t), n = e.parent('div[role="wrapper"]'); (a = "bootstrap" === t.uiLibrary ? $('<span class="input-group-addon">' + t.icons.rightIcon + "</span>") : "bootstrap4" === t.uiLibrary ? $('<span class="input-group-append"><button class="btn btn-outline-secondary border-left-0" type="button">' + t.icons.rightIcon + "</button></span>") : $(t.icons.rightIcon)).attr("role", "right-icon"), 0 === n.length ? (n = $('<div role="wrapper" />').addClass(t.style.wrapper), e.wrap(n)) : n.addClass(t.style.wrapper), n = e.parent('div[role="wrapper"]'), t.width && n.css("width", t.width), e.val(t.value).addClass(t.style.input).attr("role", "input"), t.fontSize && e.css("font-size", t.fontSize), "bootstrap" === t.uiLibrary || "bootstrap4" === t.uiLibrary ? "small" === t.size ? (n.addClass("input-group-sm"), e.addClass("form-control-sm")) : "large" === t.size && (n.addClass("input-group-lg"), e.addClass("form-control-lg")) : "small" === t.size ? n.addClass("small") : "large" === t.size && n.addClass("large"), a.on("click", function (t) { r.is(":visible") ? e.close() : e.open() }), n.append(a), !0 !== t.footer && (e.on("blur", function () { e.timeout = setTimeout(function () { e.close() }, 500) }), r.mousedown(function () { return clearTimeout(e.timeout), e.focus(), !1 }), r.on("click", function () { clearTimeout(e.timeout), e.focus() })) } }, gj.picker.widget = function (e, t) { var i = gj.picker.methods; return this.destroy = function () { return i.destroy(this) }, e }, gj.picker.widget.prototype = new gj.widget, gj.picker.widget.constructor = gj.picker.widget, gj.picker.widget.prototype.init = function (e, t, i) { return gj.widget.prototype.init.call(this, e, t), this.attr("data-" + t, "true"), gj.picker.methods.initialize(this, this.data(), gj[t].methods), this }, gj.picker.widget.prototype.open = function (e) { var t = this.data(), i = $("body").find('[role="picker"][guid="' + this.attr("data-guid") + '"]'); return i.show(), i.closest('div[role="modal"]').show(), t.modal ? gj.core.center(i) : (gj.core.setChildPosition(this[0], i[0]), this.focus()), clearTimeout(this.timeout), gj[e].events.open(this), this }, gj.picker.widget.prototype.close = function (e) { var t = $("body").find('[role="picker"][guid="' + this.attr("data-guid") + '"]'); return t.hide(), t.closest('div[role="modal"]').hide(), gj[e].events.close(this), this }, gj.picker.widget.prototype.destroy = function (e) { var t = this.data(), i = this.parent(), a = $("body").find('[role="picker"][guid="' + this.attr("data-guid") + '"]'); return t && (this.off(), a.parent('[role="modal"]').length > 0 && a.unwrap(), a.remove(), this.removeData(), this.removeAttr("data-type").removeAttr("data-guid").removeAttr("data-" + e), this.removeClass(), i.children('[role="right-icon"]').remove(), this.unwrap()), this }, gj.dialog = { plugins: {}, messages: {} }, gj.dialog.config = { base: { autoOpen: !0, closeButtonInHeader: !0, closeOnEscape: !0, draggable: !0, height: "auto", locale: "en-us", maxHeight: void 0, maxWidth: void 0, minHeight: void 0, minWidth: void 0, modal: !1, resizable: !1, scrollable: !1, title: void 0, uiLibrary: void 0, width: 300, style: { modal: "gj-modal", content: "gj-dialog-md", header: "gj-dialog-md-header gj-unselectable", headerTitle: "gj-dialog-md-title", headerCloseButton: "gj-dialog-md-close", body: "gj-dialog-md-body", footer: "gj-dialog-footer gj-dialog-md-footer" } }, bootstrap: { style: { modal: "modal", content: "modal-content gj-dialog-bootstrap", header: "modal-header", headerTitle: "modal-title", headerCloseButton: "close", body: "modal-body", footer: "gj-dialog-footer modal-footer" } }, bootstrap4: { style: { modal: "modal", content: "modal-content gj-dialog-bootstrap4", header: "modal-header", headerTitle: "modal-title", headerCloseButton: "close", body: "modal-body", footer: "gj-dialog-footer modal-footer" } } }, gj.dialog.events = { initialized: function (e) { e.trigger("initialized") }, opening: function (e) { e.trigger("opening") }, opened: function (e) { e.trigger("opened") }, closing: function (e) { e.trigger("closing") }, closed: function (e) { e.trigger("closed") }, drag: function (e) { e.trigger("drag") }, dragStart: function (e) { e.trigger("dragStart") }, dragStop: function (e) { e.trigger("dragStop") }, resize: function (e) { e.trigger("resize") }, resizeStart: function (e) { e.trigger("resizeStart") }, resizeStop: function (e) { e.trigger("resizeStop") } }, gj.dialog.methods = { init: function (e) { return gj.widget.prototype.init.call(this, e, "dialog"), gj.dialog.methods.localization(this), gj.dialog.methods.initialize(this), gj.dialog.events.initialized(this), this }, localization: function (e) { var t = e.data(); void 0 === t.title && (t.title = gj.dialog.messages[t.locale].DefaultTitle) }, getHTMLConfig: function () { var e = gj.widget.prototype.getHTMLConfig.call(this), t = this[0].attributes; return t.title && (e.title = t.title.value), e }, initialize: function (e) { var t, i, a, r = e.data(); e.addClass(r.style.content), gj.dialog.methods.setSize(e), r.closeOnEscape && $(document).keyup(function (t) { 27 === t.keyCode && e.close() }), 0 === (i = e.children('div[data-role="body"]')).length ? (i = $('<div data-role="body"/>').addClass(r.style.body), e.wrapInner(i)) : i.addClass(r.style.body), t = gj.dialog.methods.renderHeader(e), a = e.children('div[data-role="footer"]').addClass(r.style.footer), e.find('[data-role="close"]').on("click", function () { e.close() }), gj.draggable && (r.draggable && gj.dialog.methods.draggable(e, t), r.resizable && gj.dialog.methods.resizable(e)), r.scrollable && r.height && (e.addClass("gj-dialog-scrollable"), e.on("opened", function () { e.children('div[data-role="body"]').css("height", r.height - t.outerHeight() - (a.length ? a.outerHeight() : 0)) })), gj.core.center(e), r.modal && e.wrapAll('<div data-role="modal" class="' + r.style.modal + '"/>'), r.autoOpen && e.open() }, setSize: function (e) { var t = e.data(); t.width && e.css("width", t.width), t.height && e.css("height", t.height) }, renderHeader: function (e) { var t, i, a, r = e.data(); return 0 === (t = e.children('div[data-role="header"]')).length && (t = $('<div data-role="header" />'), e.prepend(t)), t.addClass(r.style.header), 0 === (i = t.find('[data-role="title"]')).length && (i = $('<h4 data-role="title">' + r.title + "</h4>"), t.append(i)), i.addClass(r.style.headerTitle), 0 === (a = t.find('[data-role="close"]')).length && r.closeButtonInHeader ? ((a = $('<button type="button" data-role="close" title="' + gj.dialog.messages[r.locale].Close + '"><span>×</span></button>')).addClass(r.style.headerCloseButton), t.append(a)) : a.length > 0 && !1 === r.closeButtonInHeader ? a.hide() : a.addClass(r.style.headerCloseButton), t }, draggable: function (e, t) { e.appendTo("body"), t.addClass("gj-draggable"), e.draggable({ handle: t, start: function () { e.addClass("gj-unselectable"), gj.dialog.events.dragStart(e) }, stop: function () { e.removeClass("gj-unselectable"), gj.dialog.events.dragStop(e) } }) }, resizable: function (e) { var t = { drag: gj.dialog.methods.resize, start: function () { e.addClass("gj-unselectable"), gj.dialog.events.resizeStart(e) }, stop: function () { this.removeAttribute("style"), e.removeClass("gj-unselectable"), gj.dialog.events.resizeStop(e) } }; e.append($('<div class="gj-resizable-handle gj-resizable-n"></div>').draggable($.extend(!0, { horizontal: !1 }, t))), e.append($('<div class="gj-resizable-handle gj-resizable-e"></div>').draggable($.extend(!0, { vertical: !1 }, t))), e.append($('<div class="gj-resizable-handle gj-resizable-s"></div>').draggable($.extend(!0, { horizontal: !1 }, t))), e.append($('<div class="gj-resizable-handle gj-resizable-w"></div>').draggable($.extend(!0, { vertical: !1 }, t))), e.append($('<div class="gj-resizable-handle gj-resizable-ne"></div>').draggable($.extend(!0, {}, t))), e.append($('<div class="gj-resizable-handle gj-resizable-nw"></div>').draggable($.extend(!0, {}, t))), e.append($('<div class="gj-resizable-handle gj-resizable-sw"></div>').draggable($.extend(!0, {}, t))), e.append($('<div class="gj-resizable-handle gj-resizable-se"></div>').draggable($.extend(!0, {}, t))) }, resize: function (e, t) { var i, a, r, n, o, d, s, l, g = !1; return a = (i = $(this)).parent(), r = gj.core.position(this), offset = { top: t.top - r.top, left: t.left - r.left }, n = a.data(), i.hasClass("gj-resizable-n") ? (o = a.height() - offset.top, s = a.offset().top + offset.top) : i.hasClass("gj-resizable-e") ? d = a.width() + offset.left : i.hasClass("gj-resizable-s") ? o = a.height() + offset.top : i.hasClass("gj-resizable-w") ? (d = a.width() - offset.left, l = a.offset().left + offset.left) : i.hasClass("gj-resizable-ne") ? (o = a.height() - offset.top, s = a.offset().top + offset.top, d = a.width() + offset.left) : i.hasClass("gj-resizable-nw") ? (o = a.height() - offset.top, s = a.offset().top + offset.top, d = a.width() - offset.left, l = a.offset().left + offset.left) : i.hasClass("gj-resizable-se") ? (o = a.height() + offset.top, d = a.width() + offset.left) : i.hasClass("gj-resizable-sw") && (o = a.height() + offset.top, d = a.width() - offset.left, l = a.offset().left + offset.left), o && (!n.minHeight || o >= n.minHeight) && (!n.maxHeight || o <= n.maxHeight) && (a.height(o), s && a.css("top", s), g = !0), d && (!n.minWidth || d >= n.minWidth) && (!n.maxWidth || d <= n.maxWidth) && (a.width(d), l && a.css("left", l), g = !0), g && gj.dialog.events.resize(a), g }, open: function (e, t) { var i; return gj.dialog.events.opening(e), e.css("display", "block"), e.closest('div[data-role="modal"]').css("display", "block"), (i = e.children('div[data-role="footer"]')).length && i.outerHeight() && e.children('div[data-role="body"]').css("margin-bottom", i.outerHeight()), void 0 !== t && e.find('[data-role="title"]').html(t), gj.dialog.events.opened(e), e }, close: function (e) { return e.is(":visible") && (gj.dialog.events.closing(e), e.css("display", "none"), e.closest('div[data-role="modal"]').css("display", "none"), gj.dialog.events.closed(e)), e }, isOpen: function (e) { return e.is(":visible") }, content: function (e, t) { var i = e.children('div[data-role="body"]'); return void 0 === t ? i.html() : i.html(t) }, destroy: function (e, t) { var i = e.data(); return i && (!1 === t ? e.remove() : (e.close(), e.off(), e.removeData(), e.removeAttr("data-type"), e.removeClass(i.style.content), e.find('[data-role="header"]').removeClass(i.style.header), e.find('[data-role="title"]').removeClass(i.style.headerTitle), e.find('[data-role="close"]').remove(), e.find('[data-role="body"]').removeClass(i.style.body), e.find('[data-role="footer"]').removeClass(i.style.footer))), e } }, gj.dialog.widget = function (e, t) { var i = gj.dialog.methods; return this.open = function (e) { return i.open(this, e) }, this.close = function () { return i.close(this) }, this.isOpen = function () { return i.isOpen(this) }, this.content = function (e) { return i.content(this, e) }, this.destroy = function (e) { return i.destroy(this, e) }, $.extend(e, this), "dialog" !== e.attr("data-type") && i.init.call(e, t), e }, gj.dialog.widget.prototype = new gj.widget, gj.dialog.widget.constructor = gj.dialog.widget, gj.dialog.widget.prototype.getHTMLConfig = gj.dialog.methods.getHTMLConfig, jQuery.fn.dialog = function (e) { var t; if (this && this.length) { if ("object" != typeof e && e) { if ((t = new gj.dialog.widget(this, null))[e]) return t[e].apply(this, Array.prototype.slice.call(arguments, 1)); throw "Method " + e + " does not exist." } return new gj.dialog.widget(this, e) } }, gj.dialog.messages["en-us"] = { Close: "Close", DefaultTitle: "Dialog" }, gj.draggable = { plugins: {} }, gj.draggable.config = { base: { handle: void 0, vertical: !0, horizontal: !0, containment: void 0 } }, gj.draggable.methods = { init: function (e) { var t, i, a = this; return gj.widget.prototype.init.call(this, e, "draggable"), i = this.data(), a.attr("data-draggable", "true"), (t = gj.draggable.methods.getHandleElement(a)).on("touchstart mousedown", function (e) { var r = gj.core.position(a[0]); a[0].style.top = r.top + "px", a[0].style.left = r.left + "px", a[0].style.position = "fixed", a.attr("draggable-dragging", !0), a.removeAttr("draggable-x").removeAttr("draggable-y"), gj.documentManager.subscribeForEvent("touchmove", a.data("guid"), gj.draggable.methods.createMoveHandler(a, t, i)), gj.documentManager.subscribeForEvent("mousemove", a.data("guid"), gj.draggable.methods.createMoveHandler(a, t, i)) }), gj.documentManager.subscribeForEvent("mouseup", a.data("guid"), gj.draggable.methods.createUpHandler(a)), gj.documentManager.subscribeForEvent("touchend", a.data("guid"), gj.draggable.methods.createUpHandler(a)), gj.documentManager.subscribeForEvent("touchcancel", a.data("guid"), gj.draggable.methods.createUpHandler(a)), a }, getHandleElement: function (e) { var t = e.data("handle"); return t && t.length ? t : e }, createUpHandler: function (e) { return function (t) { "true" === e.attr("draggable-dragging") && (e.attr("draggable-dragging", !1), gj.documentManager.unsubscribeForEvent("mousemove", e.data("guid")), gj.documentManager.unsubscribeForEvent("touchmove", e.data("guid")), gj.draggable.events.stop(e, { x: e.mouseX(t), y: e.mouseY(t) })) } }, createMoveHandler: function (e, t, i) { return function (t) { var a, r, n, o, d, s; "true" === e.attr("draggable-dragging") && (a = Math.round(e.mouseX(t)), r = Math.round(e.mouseY(t)), d = e.attr("draggable-x"), s = e.attr("draggable-y"), d && s ? (n = i.horizontal ? a - parseInt(d, 10) : 0, o = i.vertical ? r - parseInt(s, 10) : 0, gj.draggable.methods.move(e[0], i, n, o, a, r)) : gj.draggable.events.start(e, a, r), e.attr("draggable-x", a), e.attr("draggable-y", r)) } }, move: function (e, t, i, a, r, n) { var o, d, s, l = gj.core.position(e), g = l.top + a, c = l.left + i; t.containment && (d = (o = gj.core.position(t.containment)).top + gj.core.height(t.containment) - gj.core.height(e), s = o.left + gj.core.width(t.containment) - gj.core.width(e), g > o.top && g < d ? (o.top >= n || o.bottom <= n) && (g = l.top) : g = g <= o.top ? o.top + 1 : d - 1, c > o.left && c < s ? (o.left >= r || o.right <= r) && (c = l.left) : c = c <= o.left ? o.left + 1 : s - 1), !1 !== gj.draggable.events.drag($(e), c, g, r, n) && (e.style.top = g + "px", e.style.left = c + "px") }, destroy: function (e) { return "true" === e.attr("data-draggable") && (gj.documentManager.unsubscribeForEvent("mouseup", e.data("guid")), e.removeData(), e.removeAttr("data-guid").removeAttr("data-type").removeAttr("data-draggable"), e.removeAttr("draggable-x").removeAttr("draggable-y").removeAttr("draggable-dragging"), e[0].style.top = "", e[0].style.left = "", e[0].style.position = "", e.off("drag").off("start").off("stop"), gj.draggable.methods.getHandleElement(e).off("mousedown")), e } }, gj.draggable.events = { drag: function (e, t, i, a, r) { return e.triggerHandler("drag", [{ left: t, top: i }, { x: a, y: r }]) }, start: function (e, t, i) { e.triggerHandler("start", [{ x: t, y: i }]) }, stop: function (e, t) { e.triggerHandler("stop", [t]) } }, gj.draggable.widget = function (e, t) { var i = gj.draggable.methods; return e.destroy || (this.destroy = function () { return i.destroy(this) }), $.extend(e, this), "true" !== e.attr("data-draggable") && i.init.call(e, t), e }, gj.draggable.widget.prototype = new gj.widget, gj.draggable.widget.constructor = gj.draggable.widget, jQuery.fn.draggable = function (e) { var t; if (this && this.length) { if ("object" != typeof e && e) { if ((t = new gj.draggable.widget(this, null))[e]) return t[e].apply(this, Array.prototype.slice.call(arguments, 1)); throw "Method " + e + " does not exist." } return new gj.draggable.widget(this, e) } }, gj.droppable = { plugins: {} }, gj.droppable.config = { hoverClass: void 0 }, gj.droppable.methods = { init: function (e) { return gj.widget.prototype.init.call(this, e, "droppable"), this.attr("data-droppable", "true"), gj.documentManager.subscribeForEvent("mousedown", this.data("guid"), gj.droppable.methods.createMouseDownHandler(this)), gj.documentManager.subscribeForEvent("mousemove", this.data("guid"), gj.droppable.methods.createMouseMoveHandler(this)), gj.documentManager.subscribeForEvent("mouseup", this.data("guid"), gj.droppable.methods.createMouseUpHandler(this)), this }, createMouseDownHandler: function (e) { return function (t) { e.isDragging = !0 } }, createMouseMoveHandler: function (e) { return function (t) { if (e.isDragging) { var i = e.data("hoverClass"), a = { x: e.mouseX(t), y: e.mouseY(t) }, r = gj.droppable.methods.isOver(e, a); r != e.isOver && (r ? (i && e.addClass(i), gj.droppable.events.over(e, a)) : (i && e.removeClass(i), gj.droppable.events.out(e))), e.isOver = r } } }, createMouseUpHandler: function (e) { return function (t) { var i = { left: e.mouseX(t), top: e.mouseY(t) }; e.isDragging = !1, gj.droppable.methods.isOver(e, i) && gj.droppable.events.drop(e) } }, isOver: function (e, t) { var i = e.offset().top, a = e.offset().left; return t.x > a && t.x < a + e.outerWidth(!0) && t.y > i && t.y < i + e.outerHeight(!0) }, destroy: function (e) { return "true" === e.attr("data-droppable") && (gj.documentManager.unsubscribeForEvent("mousedown", e.data("guid")), gj.documentManager.unsubscribeForEvent("mousemove", e.data("guid")), gj.documentManager.unsubscribeForEvent("mouseup", e.data("guid")), e.removeData(), e.removeAttr("data-guid"), e.removeAttr("data-droppable"), e.off("drop").off("over").off("out")), e } }, gj.droppable.events = { drop: function (e, t, i) { e.trigger("drop", [{ top: i, left: t }]) }, over: function (e, t) { e.trigger("over", [t]) }, out: function (e) { e.trigger("out") } }, gj.droppable.widget = function (e, t) { var i = gj.droppable.methods; return this.isOver = !1, this.isDragging = !1, this.destroy = function () { return i.destroy(this) }, this.isOver = function (e) { return i.isOver(this, e) }, $.extend(e, this), "true" !== e.attr("data-droppable") && i.init.call(e, t), e }, gj.droppable.widget.prototype = new gj.widget, gj.droppable.widget.constructor = gj.droppable.widget, jQuery.fn.droppable = function (e) { var t; if (this && this.length) { if ("object" != typeof e && e) { if ((t = new gj.droppable.widget(this, null))[e]) return t[e].apply(this, Array.prototype.slice.call(arguments, 1)); throw "Method " + e + " does not exist." } return new gj.droppable.widget(this, e) } }, gj.grid = { plugins: {}, messages: {} }, gj.grid.config = { base: { dataSource: void 0, columns: [], autoGenerateColumns: !1, defaultColumnSettings: { hidden: !1, width: void 0, sortable: !1, type: "text", title: void 0, field: void 0, align: void 0, cssClass: void 0, headerCssClass: void 0, tooltip: void 0, icon: void 0, events: void 0, format: "mm/dd/yyyy", decimalDigits: void 0, tmpl: void 0, stopPropagation: !1, renderer: void 0, filter: void 0 }, mapping: { dataField: "records", totalRecordsField: "total" }, params: {}, paramNames: { sortBy: "sortBy", direction: "direction" }, uiLibrary: "materialdesign", iconsLibrary: "materialicons", selectionType: "single", selectionMethod: "basic", autoLoad: !0, notFoundText: void 0, width: void 0, minWidth: void 0, headerRowHeight: "fixed", bodyRowHeight: "autogrow", fontSize: void 0, primaryKey: void 0, locale: "en-us", defaultIconColumnWidth: 70, defaultCheckBoxColumnWidth: 70, style: { wrapper: "gj-grid-wrapper", table: "gj-grid gj-grid-md", loadingCover: "gj-grid-loading-cover", loadingText: "gj-grid-loading-text", header: { cell: void 0, sortable: "gj-cursor-pointer gj-unselectable" }, content: { rowSelected: "gj-grid-md-select" } }, icons: { asc: "▲", desc: "▼" } }, bootstrap: { style: { wrapper: "gj-grid-wrapper", table: "gj-grid gj-grid-bootstrap gj-grid-bootstrap-3 table table-bordered table-hover", content: { rowSelected: "active" } }, iconsLibrary: "glyphicons", defaultIconColumnWidth: 34, defaultCheckBoxColumnWidth: 36 }, bootstrap4: { style: { wrapper: "gj-grid-wrapper", table: "gj-grid gj-grid-bootstrap gj-grid-bootstrap-4 table table-bordered table-hover", content: { rowSelected: "active" } }, defaultIconColumnWidth: 42, defaultCheckBoxColumnWidth: 44 }, materialicons: { icons: { asc: '<i class="gj-icon arrow-upward" />', desc: '<i class="gj-icon arrow-downward" />' } }, fontawesome: { icons: { asc: '<i class="fa fa-sort-amount-asc" aria-hidden="true"></i>', desc: '<i class="fa fa-sort-amount-desc" aria-hidden="true"></i>' } }, glyphicons: { icons: { asc: '<span class="glyphicon glyphicon-sort-by-alphabet" />', desc: '<span class="glyphicon glyphicon-sort-by-alphabet-alt" />' } } }, gj.grid.events = { beforeEmptyRowInsert: function (e, t) { return e.triggerHandler("beforeEmptyRowInsert", [t]) }, dataBinding: function (e, t) { return e.triggerHandler("dataBinding", [t]) }, dataBound: function (e, t, i) { return e.triggerHandler("dataBound", [t, i]) }, rowDataBound: function (e, t, i, a) { return e.triggerHandler("rowDataBound", [t, i, a]) }, cellDataBound: function (e, t, i, a, r) { return e.triggerHandler("cellDataBound", [t, i, a, r]) }, rowSelect: function (e, t, i, a) { return e.triggerHandler("rowSelect", [t, i, a]) }, rowUnselect: function (e, t, i, a) { return e.triggerHandler("rowUnselect", [t, i, a]) }, rowRemoving: function (e, t, i, a) { return e.triggerHandler("rowRemoving", [t, i, a]) }, destroying: function (e) { return e.triggerHandler("destroying") }, columnHide: function (e, t) { return e.triggerHandler("columnHide", [t]) }, columnShow: function (e, t) { return e.triggerHandler("columnShow", [t]) }, initialized: function (e) { return e.triggerHandler("initialized") }, dataFiltered: function (e, t) { return e.triggerHandler("dataFiltered", [t]) } }, gj.grid.methods = { init: function (e) { return gj.widget.prototype.init.call(this, e, "grid"), gj.grid.methods.initialize(this), this.data("autoLoad") && this.reload(), this }, getConfig: function (e, t) { var i = gj.widget.prototype.getConfig.call(this, e, t); return gj.grid.methods.setDefaultColumnConfig(i.columns, i.defaultColumnSettings), i }, setDefaultColumnConfig: function (e, t) { var i, a; if (e && e.length) for (a = 0; a < e.length; a++)i = $.extend(!0, {}, t), $.extend(!0, i, e[a]), e[a] = i }, getHTMLConfig: function () { var e = gj.widget.prototype.getHTMLConfig.call(this); return e.columns = [], this.find("thead > tr > th").each(function () { var t = $(this), i = t.text(), a = gj.widget.prototype.getHTMLConfig.call(t); a.title = i, a.field || (a.field = i), a.events && (a.events = gj.grid.methods.eventsParser(a.events)), e.columns.push(a) }), e }, eventsParser: function (events) { var result = {}, list, i, key, func, position; for (list = events.split(","), i = 0; i < list.length; i++)position = list[i].indexOf(":"), position > 0 && (key = $.trim(list[i].substr(0, position)), func = $.trim(list[i].substr(position + 1, list[i].length)), result[key] = eval("window." + func)); return result }, initialize: function (e) { var t = e.data(), i = e.parent('div[data-role="wrapper"]'); gj.grid.methods.localization(t), 0 === i.length ? (i = $('<div data-role="wrapper" />').addClass(t.style.wrapper), e.wrap(i)) : i.addClass(t.style.wrapper), t.width && e.parent().css("width", t.width), t.minWidth && e.css("min-width", t.minWidth), t.fontSize && e.css("font-size", t.fontSize), "autogrow" === t.headerRowHeight && e.addClass("autogrow-header-row"), "fixed" === t.bodyRowHeight && e.addClass("fixed-body-rows"), e.addClass(t.style.table), "checkbox" === t.selectionMethod && t.columns.splice(gj.grid.methods.getColumnPositionNotInRole(e), 0, { title: "", width: t.defaultCheckBoxColumnWidth, align: "center", type: "checkbox", role: "selectRow", events: { click: function (t) { gj.grid.methods.setSelected(e, t.data.id, $(this).closest("tr")) } }, headerCssClass: "gj-grid-select-all", stopPropagation: !0 }), 0 === e.children("tbody").length && e.append($("<tbody/>")), gj.grid.methods.renderHeader(e), gj.grid.methods.appendEmptyRow(e, "&nbsp;"), gj.grid.events.initialized(e) }, localization: function (e) { e.notFoundText || (e.notFoundText = gj.grid.messages[e.locale].NoRecordsFound) }, renderHeader: function (e) { var t, i, a, r, n, o, d, s, l; for (i = (t = e.data()).columns, a = t.style.header, 0 === (r = e.children("thead")).length && (r = $("<thead />"), e.prepend(r)), n = $('<tr data-role="caption" />'), s = 0; s < i.length; s += 1)o = $('<th data-field="' + (i[s].field || "") + '" />'), i[s].width ? o.attr("width", i[s].width) : "checkbox" === i[s].type && o.attr("width", t.defaultIconColumnWidth), o.addClass(a.cell), i[s].headerCssClass && o.addClass(i[s].headerCssClass), o.css("text-align", i[s].align || "left"), "checkbox" === t.selectionMethod && "multiple" === t.selectionType && "checkbox" === i[s].type && "selectRow" === i[s].role ? (0 === (l = o.find('input[data-role="selectAll"]')).length && (l = $('<input type="checkbox" data-role="selectAll" />'), o.append(l), l.checkbox({ uiLibrary: t.uiLibrary })), l.off("click").on("click", function () { this.checked ? e.selectAll() : e.unSelectAll() })) : (d = $('<div data-role="title"/>').html(void 0 === i[s].title ? i[s].field : i[s].title), o.append(d), i[s].sortable && (d.addClass(a.sortable), d.on("click", gj.grid.methods.createSortHandler(e, i[s])))), i[s].hidden && o.hide(), n.append(o); r.empty().append(n) }, createSortHandler: function (e, t) { return function () { var i, a = {}; e.count() > 0 && (a[(i = e.data()).paramNames.sortBy] = t.field, t.direction = "asc" === t.direction ? "desc" : "asc", a[i.paramNames.direction] = t.direction, e.reload(a)) } }, updateHeader: function (e) { var t, i, a = e.data(), r = a.params[a.paramNames.sortBy], n = a.params[a.paramNames.direction]; e.find('thead tr th [data-role="sorticon"]').remove(), r && (position = gj.grid.methods.getColumnPosition(e.data("columns"), r), position > -1 && (i = e.find("thead tr th:eq(" + position + ') div[data-role="title"]'), t = $('<div data-role="sorticon" class="gj-unselectable" />').append("desc" === n ? a.icons.desc : a.icons.asc), i.after(t))) }, useHtmlDataSource: function (e, t) { var i, a, r, n, o = [], d = e.find('tbody tr[data-role != "empty"]'); for (i = 0; i < d.length; i++) { for (r = $(d[i]).find("td"), n = {}, a = 0; a < r.length; a++)n[t.columns[a].field] = $(r[a]).html(); o.push(n) } t.dataSource = o }, startLoading: function (e) { var t, i, a, r, n, o, d; gj.grid.methods.stopLoading(e), d = e.data(), 0 !== e.outerHeight() && (r = (t = e.children("tbody")).outerWidth(!1), n = t.outerHeight(!1), o = Math.abs(e.parent().offset().top - t.offset().top), i = $('<div data-role="loading-cover" />').addClass(d.style.loadingCover).css({ width: r, height: n, top: o }), (a = $('<div data-role="loading-text">' + gj.grid.messages[d.locale].Loading + "</div>").addClass(d.style.loadingText)).insertAfter(e), i.insertAfter(e), a.css({ top: o + n / 2 - a.outerHeight(!1) / 2, left: r / 2 - a.outerWidth(!1) / 2 })) }, stopLoading: function (e) { e.parent().find('div[data-role="loading-cover"]').remove(), e.parent().find('div[data-role="loading-text"]').remove() }, appendEmptyRow: function (e, t) { var i, a, r, n; i = e.data(), a = $('<tr data-role="empty"/>'), (r = $("<td/>").css({ width: "100%", "text-align": "center" })).attr("colspan", gj.grid.methods.countVisibleColumns(e)), n = $("<div />").html(t || i.notFoundText), r.append(n), a.append(r), gj.grid.events.beforeEmptyRowInsert(e, a), e.append(a) }, autoGenerateColumns: function (e, t) { var i, a, r, n, o = e.data(); if (o.columns = [], t.length > 0) { for (i = Object.getOwnPropertyNames(t[0]), n = 0; n < i.length; n++)r = "text", (a = t[0][i[n]]) && ("number" == typeof a ? r = "number" : a.indexOf("/Date(") > -1 && (r = "date")), o.columns.push({ field: i[n], type: r }); gj.grid.methods.setDefaultColumnConfig(o.columns, o.defaultColumnSettings) } gj.grid.methods.renderHeader(e) }, loadData: function (e) { var t, i, a, r, n, o, d, s; for (t = e.data(), i = e.getAll(), gj.grid.events.dataBinding(e, i), r = i.length, gj.grid.methods.stopLoading(e), t.autoGenerateColumns && gj.grid.methods.autoGenerateColumns(e, i), o = e.children("tbody"), "checkbox" === t.selectionMethod && "multiple" === t.selectionType && e.find('thead input[data-role="selectAll"]').prop("checked", !1), o.children("tr").not('[data-role="row"]').remove(), 0 === r && (o.empty(), gj.grid.methods.appendEmptyRow(e)), n = (d = o.children("tr")).length, a = 0; a < n; a++) { if (!(a < r)) { o.find('tr[data-role="row"]:gt(' + (a - 1) + ")").remove(); break } s = d.eq(a), gj.grid.methods.renderRow(e, s, i[a], a) } for (a = n; a < r; a++)gj.grid.methods.renderRow(e, null, i[a], a); gj.grid.events.dataBound(e, i, t.totalRecords) }, getId: function (e, t, i) { return t && e[t] ? e[t] : i }, renderRow: function (e, t, i, a) { var r, n, o, d, s; for (d = e.data(), t && 0 !== t.length ? (s = "update", t.removeClass(d.style.content.rowSelected).removeAttr("data-selected").off("click")) : (s = "create", t = $('<tr data-role="row"/>'), e.children("tbody").append(t)), r = gj.grid.methods.getId(i, d.primaryKey, a + 1), t.attr("data-position", a + 1), "checkbox" !== d.selectionMethod && t.on("click", gj.grid.methods.createRowClickHandler(e, r)), o = 0; o < d.columns.length; o++)"update" === s ? (n = t.find("td:eq(" + o + ")"), gj.grid.methods.renderCell(e, n, d.columns[o], i, r)) : (n = gj.grid.methods.renderCell(e, null, d.columns[o], i, r), t.append(n)); gj.grid.events.rowDataBound(e, t, r, i) }, renderCell: function (e, t, i, a, r, n) { var o, d; if (t && 0 !== t.length ? (o = t.find('div[data-role="display"]'), n = "update") : (t = $("<td/>"), o = $('<div data-role="display" />'), i.align && t.css("text-align", i.align), i.cssClass && t.addClass(i.cssClass), t.append(o), n = "create"), gj.grid.methods.renderDisplayElement(e, o, i, a, r, n), "update" === n && (t.off(), o.off()), i.events) for (d in i.events) i.events.hasOwnProperty(d) && t.on(d, { id: r, field: i.field, record: a }, gj.grid.methods.createCellEventHandler(i, i.events[d])); return i.hidden && t.hide(), gj.grid.events.cellDataBound(e, o, r, i, a), t }, createCellEventHandler: function (e, t) { return function (i) { e.stopPropagation && i.stopPropagation(), t.call(this, i) } }, renderDisplayElement: function (e, t, i, a, r, n) { var o, d; "checkbox" === i.type && gj.checkbox ? "create" === n ? (d = $('<input type="checkbox" />').val(r).prop("checked", !!a[i.field]), i.role && d.attr("data-role", i.role), t.append(d), d.checkbox({ uiLibrary: e.data("uiLibrary") }), "selectRow" === i.role ? d.on("click", function () { return !1 }) : d.prop("disabled", !0)) : t.find('input[type="checkbox"]').val(r).prop("checked", !!a[i.field]) : "icon" === i.type ? "create" === n && (t.append($("<span/>").addClass(i.icon).css({ cursor: "pointer" })), "bootstrap" === e.data().uiLibrary && t.children("span").addClass("glyphicon"), i.stopPropagation = !0) : i.tmpl ? (o = i.tmpl, i.tmpl.replace(/\{(.+?)\}/g, function (e, t) { o = o.replace(e, gj.grid.methods.formatText(a[t], i)) }), t.html(o)) : i.renderer && "function" == typeof i.renderer ? (o = i.renderer(a[i.field], a, t.parent(), t, r, e)) && t.html(o) : (a[i.field] = gj.grid.methods.formatText(a[i.field], i), !i.tooltip && a[i.field] && t.attr("title", a[i.field]), t.html(a[i.field])), i.tooltip && "create" === n && t.attr("title", i.tooltip) }, formatText: function (e, t) { return e = e && ["date", "time", "datetime"].indexOf(t.type) > -1 ? gj.core.formatDate(gj.core.parseDate(e, t.format), t.format) : null == e ? "" : e.toString(), t.decimalDigits && e && (e = parseFloat(e).toFixed(t.decimalDigits)), e }, setRecordsData: function (e, t) { var i = [], a = 0, r = e.data(); return $.isArray(t) ? (i = t, a = t.length) : r && r.mapping && $.isArray(t[r.mapping.dataField]) && (i = t[r.mapping.dataField], (a = t[r.mapping.totalRecordsField]) && !isNaN(a) || (a = 0)), e.data("records", i), e.data("totalRecords", a), i }, createRowClickHandler: function (e, t) { return function () { gj.grid.methods.setSelected(e, t, $(this)) } }, selectRow: function (e, t, i, a) { var r; return i.addClass(t.style.content.rowSelected), i.attr("data-selected", "true"), "checkbox" === t.selectionMethod && ((r = i.find('input[type="checkbox"][data-role="selectRow"]')).length && !r.prop("checked") && r.prop("checked", !0), "multiple" === t.selectionType && e.getSelections().length === e.count(!1) && e.find('thead input[data-role="selectAll"]').prop("checked", !0)), gj.grid.events.rowSelect(e, i, a, e.getById(a)) }, unselectRow: function (e, t, i, a) { var r; if ("true" === i.attr("data-selected")) return i.removeClass(t.style.content.rowSelected), "checkbox" === t.selectionMethod && ((r = i.find('td input[type="checkbox"][data-role="selectRow"]')).length && r.prop("checked") && r.prop("checked", !1), "multiple" === t.selectionType && e.find('thead input[data-role="selectAll"]').prop("checked", !1)), i.removeAttr("data-selected"), gj.grid.events.rowUnselect(e, i, a, e.getById(a)) }, setSelected: function (e, t, i) { var a = e.data(); return i && i.length || (i = gj.grid.methods.getRowById(e, t)), i && ("true" === i.attr("data-selected") ? gj.grid.methods.unselectRow(e, a, i, t) : ("single" === a.selectionType && i.siblings('[data-selected="true"]').each(function () { var t = $(this), i = gj.grid.methods.getId(t, a.primaryKey, t.data("position")); gj.grid.methods.unselectRow(e, a, t, i) }), gj.grid.methods.selectRow(e, a, i, t))), e }, selectAll: function (e) { var t = e.data(); return e.find('tbody tr[data-role="row"]').each(function () { var i = $(this), a = i.data("position"), r = e.get(a), n = gj.grid.methods.getId(r, t.primaryKey, a); gj.grid.methods.selectRow(e, t, i, n) }), e.find('thead input[data-role="selectAll"]').prop("checked", !0), e }, unSelectAll: function (e) { var t = e.data(); return e.find("tbody tr").each(function () { var i = $(this), a = i.data("position"), r = e.get(a), n = gj.grid.methods.getId(r, t.primaryKey, a); gj.grid.methods.unselectRow(e, t, i, n), i.find('input[type="checkbox"][data-role="selectRow"]').prop("checked", !1) }), e.find('thead input[data-role="selectAll"]').prop("checked", !1), e }, getSelected: function (e) { var t, i, a, r = null; return (t = e.find('tbody>tr[data-selected="true"]')).length > 0 && (a = $(t[0]).data("position"), i = e.get(a), r = gj.grid.methods.getId(i, e.data().primaryKey, a)), r }, getSelectedRows: function (e) { return e.data(), e.find('tbody>tr[data-selected="true"]') }, getSelections: function (e) { var t, i, a = [], r = e.data(), n = gj.grid.methods.getSelectedRows(e); return 0 < n.length && n.each(function () { t = $(this).data("position"), i = e.get(t), a.push(gj.grid.methods.getId(i, r.primaryKey, t)) }), a }, getById: function (e, t) { var i, a = null, r = e.data("primaryKey"), n = e.data("records"); if (r) { for (i = 0; i < n.length; i++)if (n[i][r] == t) { a = n[i]; break } } else a = e.get(t); return a }, getRecVPosById: function (e, t) { var i, a = t, r = e.data(); if (r.primaryKey) for (i = 0; i < r.dataSource.length; i++)if (r.dataSource[i][r.primaryKey] == t) { a = i; break } return a }, getRowById: function (e, t) { var i, a, r = e.getAll(!1), n = e.data("primaryKey"), o = void 0; if (n) { for (a = 0; a < r.length; a++)if (r[a][n] == t) { i = a + 1; break } } else i = t; return i && (o = e.children("tbody").children('tr[data-position="' + i + '"]')), o }, getByPosition: function (e, t) { return e.getAll(!1)[t - 1] }, getColumnPosition: function (e, t) { var i, a = -1; for (i = 0; i < e.length; i++)if (e[i].field === t) { a = i; break } return a }, getColumnInfo: function (e, t) { var i, a = {}, r = e.data(); for (i = 0; i < r.columns.length; i += 1)if (r.columns[i].field === t) { a = r.columns[i]; break } return a }, getCell: function (e, t, i) { var a, r = null; return (a = gj.grid.methods.getColumnPosition(e.data("columns"), i)) > -1 && (r = gj.grid.methods.getRowById(e, t).find("td:eq(" + a + ') div[data-role="display"]')), r }, setCellContent: function (e, t, i, a) { var r, n = gj.grid.methods.getCell(e, t, i); n && (n.empty(), "object" == typeof a ? n.append(a) : (r = gj.grid.methods.getColumnInfo(e, i), gj.grid.methods.renderDisplayElement(e, n, r, e.getById(t), t, "update"))) }, clone: function (e) { var t = []; return $.each(e, function () { t.push(this.clone()) }), t }, getAll: function (e) { return e.data("records") }, countVisibleColumns: function (e) { var t, i, a; for (t = e.data().columns, i = 0, a = 0; a < t.length; a++)!0 !== t[a].hidden && i++; return i }, clear: function (e, t) { var i = e.data(); return e.xhr && e.xhr.abort(), e.children("tbody").empty(), i.records = [], gj.grid.methods.stopLoading(e), gj.grid.methods.appendEmptyRow(e, t ? i.notFoundText : "&nbsp;"), gj.grid.events.dataBound(e, [], 0), e }, render: function (e, t) { return t && (gj.grid.methods.setRecordsData(e, t), gj.grid.methods.updateHeader(e), gj.grid.methods.loadData(e)), e }, filter: function (e) { var t, i, a = e.data(), r = a.dataSource.slice(); for (t in a.params[a.paramNames.sortBy] && (i = gj.grid.methods.getColumnInfo(e, a.params[a.paramNames.sortBy]), r.sort(i.sortable.sorter ? i.sortable.sorter(i.direction, i) : gj.grid.methods.createDefaultSorter(i.direction, i.field))), a.params) a.params[t] && !a.paramNames[t] && (i = gj.grid.methods.getColumnInfo(e, t), r = $.grep(r, function (e) { var r = e[t] || "", n = a.params[t] || ""; return i && "function" == typeof i.filter ? i.filter(r, n) : r.toUpperCase().indexOf(n.toUpperCase()) > -1 })); return gj.grid.events.dataFiltered(e, r), r }, createDefaultSorter: function (e, t) { return function (i, a) { var r = (i[t] || "").toString(), n = (a[t] || "").toString(); return "asc" === e ? r.localeCompare(n) : n.localeCompare(r) } }, destroy: function (e, t, i) { return e.data() && (gj.grid.events.destroying(e), gj.grid.methods.stopLoading(e), e.xhr && e.xhr.abort(), e.off(), !1 === i && e.parent('div[data-role="wrapper"]').length > 0 && e.unwrap(), e.removeData(), !1 === t ? e.remove() : e.removeClass().empty(), e.removeAttr("data-type")), e }, showColumn: function (e, t) { var i, a = e.data(), r = gj.grid.methods.getColumnPosition(a.columns, t); return r > -1 && (e.find("thead>tr").each(function () { $(this).children("th").eq(r).show() }), $.each(e.find("tbody>tr"), function () { $(this).children("td").eq(r).show() }), a.columns[r].hidden = !1, (i = e.find('tbody > tr[data-role="empty"] > td')) && i.length && i.attr("colspan", gj.grid.methods.countVisibleColumns(e)), gj.grid.events.columnShow(e, a.columns[r])), e }, hideColumn: function (e, t) { var i, a = e.data(), r = gj.grid.methods.getColumnPosition(a.columns, t); return r > -1 && (e.find("thead>tr").each(function () { $(this).children("th").eq(r).hide() }), $.each(e.find("tbody>tr"), function () { $(this).children("td").eq(r).hide() }), a.columns[r].hidden = !0, (i = e.find('tbody > tr[data-role="empty"] > td')) && i.length && i.attr("colspan", gj.grid.methods.countVisibleColumns(e)), gj.grid.events.columnHide(e, a.columns[r])), e }, isLastRecordVisible: function () { return !0 }, addRow: function (e, t) { var i = e.data(); return i.totalRecords = e.data("totalRecords") + 1, gj.grid.events.dataBinding(e, [t]), i.records.push(t), $.isArray(i.dataSource) && i.dataSource.push(t), 1 === i.totalRecords && e.children("tbody").empty(), gj.grid.methods.isLastRecordVisible(e) && gj.grid.methods.renderRow(e, null, t, e.count() - 1), gj.grid.events.dataBound(e, [t], i.totalRecords), e }, updateRow: function (e, t, i) { var a, r = gj.grid.methods.getRowById(e, t), n = e.data(); return n.records[r.data("position") - 1] = i, $.isArray(n.dataSource) && (a = gj.grid.methods.getRecVPosById(e, t), n.dataSource[a] = i), gj.grid.methods.renderRow(e, r, i, r.index()), e }, removeRow: function (e, t) { var i, a = e.data(), r = gj.grid.methods.getRowById(e, t); return gj.grid.events.rowRemoving(e, r, t, e.getById(t)), $.isArray(a.dataSource) && (i = gj.grid.methods.getRecVPosById(e, t), a.dataSource.splice(i, 1)), e.reload(), e }, count: function (e, t) { return t ? e.data().totalRecords : e.getAll().length }, getColumnPositionByRole: function (e, t) { var i, a, r = e.data("columns"); for (i = 0; i < r.length; i++)if (r[i].role === t) { a = i; break } return a }, getColumnPositionNotInRole: function (e) { var t, i = 0, a = e.data("columns"); for (t = 0; t < a.length; t++)if (!a[t].role) { i = t; break } return i } }, gj.grid.widget = function (e, t) { var i = gj.grid.methods; return this.reload = function (e) { return i.startLoading(this), gj.widget.prototype.reload.call(this, e) }, this.clear = function (e) { return i.clear(this, e) }, this.count = function (e) { return i.count(this, e) }, this.render = function (t) { return i.render(e, t) }, this.destroy = function (e, t) { return i.destroy(this, e, t) }, this.setSelected = function (e) { return i.setSelected(this, e) }, this.getSelected = function () { return i.getSelected(this) }, this.getSelections = function () { return i.getSelections(this) }, this.selectAll = function () { return i.selectAll(this) }, this.unSelectAll = function () { return i.unSelectAll(this) }, this.getById = function (e) { return i.getById(this, e) }, this.get = function (e) { return i.getByPosition(this, e) }, this.getAll = function (e) { return i.getAll(this, e) }, this.showColumn = function (e) { return i.showColumn(this, e) }, this.hideColumn = function (e) { return i.hideColumn(this, e) }, this.addRow = function (e) { return i.addRow(this, e) }, this.updateRow = function (e, t) { return i.updateRow(this, e, t) }, this.setCellContent = function (e, t, a) { i.setCellContent(this, e, t, a) }, this.removeRow = function (e) { return i.removeRow(this, e) }, $.extend(e, this), "grid" !== e.attr("data-type") && i.init.call(e, t), e }, gj.grid.widget.prototype = new gj.widget, gj.grid.widget.constructor = gj.grid.widget, gj.grid.widget.prototype.getConfig = gj.grid.methods.getConfig, gj.grid.widget.prototype.getHTMLConfig = gj.grid.methods.getHTMLConfig, jQuery.fn.grid = function (e) { var t; if (this && this.length) { if ("object" != typeof e && e) { if ((t = new gj.grid.widget(this, null))[e]) return t[e].apply(this, Array.prototype.slice.call(arguments, 1)); throw "Method " + e + " does not exist." } return new gj.grid.widget(this, e) } }, gj.grid.plugins.fixedHeader = { config: { base: { fixedHeader: !1, height: 300 } }, private: { init: function (e) { var t = e.data(), i = e.children("tbody"), a = e.children("thead"), r = t.height - a.outerHeight() - (e.children("tfoot").outerHeight() || 0); e.addClass("gj-grid-scrollable"), i.css("width", a.outerWidth()), i.height(r) }, refresh: function (e) { e.data(); var t, i, a = e.children("tbody"), r = e.children("thead"), n = e.find('tbody tr[data-role="row"] td'), o = e.find('thead tr[data-role="caption"] th'); for (e.children("tbody").height() < gj.grid.plugins.fixedHeader.private.getRowsHeight(e) ? a.css("width", r.outerWidth() + gj.grid.plugins.fixedHeader.private.getScrollBarWidth() + (navigator.userAgent.toLowerCase().indexOf("firefox") > -1 ? 1 : 0)) : a.css("width", r.outerWidth()), t = 0; t < o.length; t++)i = $(o[t]).outerWidth(), 0 === t && gj.core.isIE() && (i -= 1), $(n[t]).attr("width", i) }, getRowsHeight: function (e) { var t = 0; return e.find("tbody tr").each(function () { t += $(this).height() }), t }, getScrollBarWidth: function () { var e = document.createElement("p"); e.style.width = "100%", e.style.height = "200px"; var t = document.createElement("div"); t.style.position = "absolute", t.style.top = "0px", t.style.left = "0px", t.style.visibility = "hidden", t.style.width = "200px", t.style.height = "150px", t.style.overflow = "hidden", t.appendChild(e), document.body.appendChild(t); var i = e.offsetWidth; t.style.overflow = "scroll"; var a = e.offsetWidth; return i == a && (a = t.clientWidth), document.body.removeChild(t), i - a } }, public: {}, events: {}, configure: function (e, t, i) { $.extend(!0, e, gj.grid.plugins.fixedHeader.public), e.data(), i.fixedHeader && (e.on("initialized", function () { gj.grid.plugins.fixedHeader.private.init(e) }), e.on("dataBound", function () { gj.grid.plugins.fixedHeader.private.refresh(e) }), e.on("resize", function () { gj.grid.plugins.fixedHeader.private.refresh(e) })) } }, gj.grid.plugins.expandCollapseRows = { config: { base: { detailTemplate: void 0, keepExpandedRows: !0, expandedRows: [], icons: { expandRow: '<i class="gj-icon chevron-right" />', collapseRow: '<i class="gj-icon chevron-down" />' } }, fontawesome: { icons: { expandRow: '<i class="fa fa-angle-right" aria-hidden="true"></i>', collapseRow: '<i class="fa fa-angle-down" aria-hidden="true"></i>' } }, glyphicons: { icons: { expandRow: '<span class="glyphicon glyphicon-chevron-right" />', collapseRow: '<span class="glyphicon glyphicon-chevron-down" />' } } }, private: { expandDetail: function (e, t, i) { var a = t.closest("tr"), r = $('<tr data-role="details" />'), n = $('<td colspan="' + gj.grid.methods.countVisibleColumns(e) + '" />'), o = $('<div data-role="display" />'), d = e.data(), s = a.data("position"), l = e.get(s), g = gj.grid.plugins.expandCollapseRows; void 0 === typeof i && (i = gj.grid.methods.getId(l, d.primaryKey, l)), r.append(n.append(o.append(a.data("details")))), r.insertAfter(a), t.children('div[data-role="display"]').empty().append(d.icons.collapseRow), e.updateDetails(a), g.private.keepSelection(e, i), g.events.detailExpand(e, r.find("td>div"), i) }, collapseDetail: function (e, t, i) { var a = t.closest("tr").next('tr[data-role="details"]'), r = e.data(), n = gj.grid.plugins.expandCollapseRows; void 0 === typeof i && (i = gj.grid.methods.getId(record, r.primaryKey, record)), a.remove(), t.children('div[data-role="display"]').empty().append(r.icons.expandRow), n.private.removeSelection(e, i), n.events.detailCollapse(e, a.find("td>div"), i) }, keepSelection: function (e, t) { var i = e.data(); i.keepExpandedRows && ($.isArray(i.expandedRows) ? -1 == i.expandedRows.indexOf(t) && i.expandedRows.push(t) : i.expandedRows = [t]) }, removeSelection: function (e, t) { var i = e.data(); i.keepExpandedRows && $.isArray(i.expandedRows) && i.expandedRows.indexOf(t) > -1 && i.expandedRows.splice(i.expandedRows.indexOf(t), 1) }, updateDetailsColSpan: function (e) { var t = e.find('tbody > tr[data-role="details"] > td'); t && t.length && t.attr("colspan", gj.grid.methods.countVisibleColumns(e)) } }, public: { collapseAll: function () { var e, t = this, i = t.data(); return void 0 !== i.detailTemplate && (e = gj.grid.methods.getColumnPositionByRole(t, "expander"), t.find('tbody tr[data-role="row"]').each(function () { gj.grid.plugins.expandCollapseRows.private.collapseDetail(t, $(this).find("td:eq(" + e + ")")) })), void 0 !== i.grouping && t.find('tbody tr[role="group"]').each(function () { gj.grid.plugins.grouping.private.collapseGroup(i, $(this).find("td:eq(0)")) }), t }, expandAll: function () { var e, t = this, i = t.data(); return void 0 !== i.detailTemplate && (e = gj.grid.methods.getColumnPositionByRole(t, "expander"), t.find('tbody tr[data-role="row"]').each(function () { gj.grid.plugins.expandCollapseRows.private.expandDetail(t, $(this).find("td:eq(" + e + ")")) })), void 0 !== i.grouping && t.find('tbody tr[role="group"]').each(function () { gj.grid.plugins.grouping.private.expandGroup(i, $(this).find("td:eq(0)")) }), t }, updateDetails: function (e) { var t = this, i = e.data("details"), a = i.html(), r = t.get(e.data("position")); return r && a && (i.html().replace(/\{(.+?)\}/g, function (e, i) { var n = gj.grid.methods.getColumnInfo(t, i); a = a.replace(e, gj.grid.methods.formatText(r[i], n)) }), i.html(a)), t } }, events: { detailExpand: function (e, t, i) { e.triggerHandler("detailExpand", [t, i]) }, detailCollapse: function (e, t, i) { e.triggerHandler("detailCollapse", [t, i]) } }, configure: function (e) { var t, i = e.data(); $.extend(!0, e, gj.grid.plugins.expandCollapseRows.public), void 0 !== i.detailTemplate && (t = { title: "", width: i.defaultIconColumnWidth, align: "center", stopPropagation: !0, cssClass: "gj-cursor-pointer gj-unselectable", tmpl: i.icons.expandRow, role: "expander", events: { click: function (t) { var i = $(this), a = gj.grid.plugins.expandCollapseRows.private; "details" === i.closest("tr").next().attr("data-role") ? a.collapseDetail(e, i, t.data.id) : a.expandDetail(e, $(this), t.data.id) } } }, i.columns = [t].concat(i.columns), e.on("rowDataBound", function (e, t, a, r) { t.data("details", $(i.detailTemplate)) }), e.on("columnShow", function (t, i) { gj.grid.plugins.expandCollapseRows.private.updateDetailsColSpan(e) }), e.on("columnHide", function (t, i) { gj.grid.plugins.expandCollapseRows.private.updateDetailsColSpan(e) }), e.on("rowRemoving", function (t, i, a, r) { gj.grid.plugins.expandCollapseRows.private.collapseDetail(e, i.children("td").first(), a) }), e.on("dataBinding", function () { e.collapseAll() }), e.on("pageChanging", function () { e.collapseAll() }), e.on("dataBound", function () { var t, i, a, r, n = e.data(); if (n.keepExpandedRows && $.isArray(n.expandedRows)) for (t = 0; t < n.expandedRows.length; t++)(a = gj.grid.methods.getRowById(e, n.expandedRows[t])) && a.length && (r = gj.grid.methods.getColumnPositionByRole(e, "expander"), (i = a.children("td:eq(" + r + ")")) && i.length && gj.grid.plugins.expandCollapseRows.private.expandDetail(e, i)) })) } }, gj.grid.plugins.inlineEditing = { renderers: { editManager: function (e, t, i, a, r, n) { var o = n.data(), d = $(o.inlineEditing.editButton).attr("key", r), s = $(o.inlineEditing.deleteButton).attr("key", r), l = $(o.inlineEditing.updateButton).attr("key", r).hide(), g = $(o.inlineEditing.cancelButton).attr("key", r).hide(); d.on("click", function (e) { n.edit($(this).attr("key")) }), s.on("click", function (e) { n.removeRow($(this).attr("key")) }), l.on("click", function (e) { n.update($(this).attr("key")) }), g.on("click", function (e) { n.cancel($(this).attr("key")) }), a.empty().append(d).append(s).append(l).append(g) } } }, gj.grid.plugins.inlineEditing.config = { base: { defaultColumnSettings: { editor: void 0, editField: void 0, mode: "readEdit" }, inlineEditing: { mode: "click", managementColumn: !0, managementColumnConfig: { width: 300, role: "managementColumn", align: "center", renderer: gj.grid.plugins.inlineEditing.renderers.editManager, cssClass: "gj-grid-management-column" } } }, bootstrap: { inlineEditing: { managementColumnConfig: { width: 200, role: "managementColumn", align: "center", renderer: gj.grid.plugins.inlineEditing.renderers.editManager, cssClass: "gj-grid-management-column" } } }, bootstrap4: { inlineEditing: { managementColumnConfig: { width: 280, role: "managementColumn", align: "center", renderer: gj.grid.plugins.inlineEditing.renderers.editManager, cssClass: "gj-grid-management-column" } } } }, gj.grid.plugins.inlineEditing.private = { localization: function (e) { "bootstrap" === e.uiLibrary ? (e.inlineEditing.editButton = '<button role="edit" class="btn btn-default btn-sm"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> ' + gj.grid.messages[e.locale].Edit + "</button>", e.inlineEditing.deleteButton = '<button role="delete" class="btn btn-default btn-sm gj-margin-left-10"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span> ' + gj.grid.messages[e.locale].Delete + "</button>", e.inlineEditing.updateButton = '<button role="update" class="btn btn-default btn-sm"><span class="glyphicon glyphicon-ok" aria-hidden="true"></span> ' + gj.grid.messages[e.locale].Update + "</button>", e.inlineEditing.cancelButton = '<button role="cancel" class="btn btn-default btn-sm gj-margin-left-10"><span class="glyphicon glyphicon-ban-circle" aria-hidden="true"></span> ' + gj.grid.messages[e.locale].Cancel + "</button>") : (e.inlineEditing.editButton = '<button role="edit" class="gj-button-md"><i class="gj-icon pencil" /> ' + gj.grid.messages[e.locale].Edit.toUpperCase() + "</button>", e.inlineEditing.deleteButton = '<button role="delete" class="gj-button-md"><i class="gj-icon delete" /> ' + gj.grid.messages[e.locale].Delete.toUpperCase() + "</button>", e.inlineEditing.updateButton = '<button role="update" class="gj-button-md"><i class="gj-icon check-circle" /> ' + gj.grid.messages[e.locale].Update.toUpperCase() + "</button>", e.inlineEditing.cancelButton = '<button role="cancel" class="gj-button-md"><i class="gj-icon cancel" /> ' + gj.grid.messages[e.locale].Cancel.toUpperCase() + "</button>") }, editMode: function (e, t, i, a) { var r, n, o, d, s, l = e.data(); if ("edit" !== t.attr("data-mode")) if (i.editor) { if (gj.grid.plugins.inlineEditing.private.updateOtherCells(e, i.mode), r = t.find('div[data-role="display"]').hide(), 0 === (n = t.find('div[data-role="edit"]').show()).length && (n = $('<div data-role="edit" />'), t.append(n)), d = a[i.editField || i.field], (o = n.find("input, select, textarea").first()).length) switch (i.type) { case "checkbox": o.prop("checked", d); break; case "dropdown": o = o.dropdown("value", d); break; default: o.val(d) } else { if ("function" == typeof i.editor) i.editor(n, d, a), o = n.find("input, select, textarea").first(); else if ((s = "object" == typeof i.editor ? i.editor : {}).uiLibrary = l.uiLibrary, s.iconsLibrary = l.iconsLibrary, s.fontSize = e.css("font-size"), s.showOnFocus = !1, "checkbox" === i.type && gj.checkbox) o = $('<input type="checkbox" />').prop("checked", d), n.append(o), o.checkbox(s); else if ("date" === i.type && gj.datepicker || "time" === i.type && gj.timepicker || "datetime" === i.type && gj.datetimepicker) { switch (o = $('<input type="text" width="100%"/>'), n.append(o), i.format && (s.format = i.format), i.type) { case "date": o = o.datepicker(s); break; case "time": o = o.timepicker(s); break; case "datetime": o = o.datetimepicker(s) }o.value && o.value(r.html()) } else "dropdown" === i.type && gj.dropdown ? (o = $('<select type="text" width="100%"/>'), n.append(o), s.dataBound = function (e) { var t = $(this).dropdown(); i.editField ? t.value(a[i.editField]) : t.value(a[i.field]) }, o = o.dropdown(s)) : (o = $('<input type="text" value="' + d + '" class="gj-width-full"/>'), "materialdesign" === l.uiLibrary && o.addClass("gj-textbox-md").css("font-size", e.css("font-size")), n.append(o)); "command" !== l.inlineEditing.mode && "editOnly" !== i.mode && (o = n.find("input, select, textarea").first()).on("keyup", function (a) { 13 !== a.keyCode && 27 !== a.keyCode || gj.grid.plugins.inlineEditing.private.displayMode(e, t, i) }) } "INPUT" === o.prop("tagName").toUpperCase() && "TEXT" === o.prop("type").toUpperCase() ? gj.core.setCaretAtEnd(o[0]) : o.focus(), t.attr("data-mode", "edit") } else "managementColumn" === i.role && (t.find('[role="edit"]').hide(), t.find('[role="delete"]').hide(), t.find('[role="update"]').show(), t.find('[role="cancel"]').show()) }, displayMode: function (e, t, i, a) { var r, n, o, d, s, l, g; "editOnly" !== i.mode && ("edit" === t.attr("data-mode") && (r = t.find('div[data-role="edit"]'), n = t.find('div[data-role="display"]'), "SELECT" === (o = r.find("input, select, textarea").first())[0].tagName.toUpperCase() && o[0].selectedIndex > -1 ? (d = o[0].options[o[0].selectedIndex].innerHTML, s = o[0].value) : d = "INPUT" === o[0].tagName.toUpperCase() && "CHECKBOX" === o[0].type.toUpperCase() ? o[0].checked : o.val(), g = t.parent().data("position"), l = e.get(g), !0 !== a && d !== l[i.field] && (l[i.field] = "date" === i.type ? gj.core.parseDate(d, i.format) : d, i.editField && (l[i.editField] = s || d), "editOnly" !== i.mode && (gj.grid.methods.renderDisplayElement(e, n, i, l, gj.grid.methods.getId(l, e.data("primaryKey"), g), "update"), 0 === t.find("span.gj-dirty").length && t.prepend($('<span class="gj-dirty" />'))), gj.grid.plugins.inlineEditing.events.cellDataChanged(e, t, i, l, d), gj.grid.plugins.inlineEditing.private.updateChanges(e, i, l, d)), r.hide(), n.show(), t.attr("data-mode", "display")), "managementColumn" === i.role && (t.find('[role="update"]').hide(), t.find('[role="cancel"]').hide(), t.find('[role="edit"]').show(), t.find('[role="delete"]').show())) }, updateOtherCells: function (e, t) { var i = e.data(); "command" !== i.inlineEditing.mode && "editOnly" !== t && e.find('div[data-role="edit"]:visible').parent("td").each(function () { var t = $(this), a = i.columns[t.index()]; gj.grid.plugins.inlineEditing.private.displayMode(e, t, a) }) }, updateChanges: function (e, t, i, a) { var r, n, o, d = e.data(); d.guid || (d.guid = gj.grid.plugins.inlineEditing.private.generateGUID()), d.primaryKey && ((r = JSON.parse(sessionStorage.getItem("gj.grid." + d.guid))) ? n = r.filter(function (e) { return e[d.primaryKey] === i[d.primaryKey] }) : r = [], n && 1 === n.length ? n[0][t.field] = a : ((o = {})[d.primaryKey] = i[d.primaryKey], d.primaryKey !== t.field && (o[t.field] = a), r.push(o)), sessionStorage.setItem("gj.grid." + d.guid, JSON.stringify(r))) }, generateGUID: function () { function e() { return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1) } return e() + e() + "-" + e() + "-" + e() + "-" + e() + "-" + e() + e() + e() } }, gj.grid.plugins.inlineEditing.public = { getChanges: function () { return JSON.parse(sessionStorage.getItem("gj.grid." + this.data().guid)) }, edit: function (e) { var t, i = this.getById(e), a = gj.grid.methods.getRowById(this, e).children("td"), r = this.data("columns"); for (t = 0; t < a.length; t++)gj.grid.plugins.inlineEditing.private.editMode(this, $(a[t]), r[t], i); return this }, update: function (e) { var t, i = this.getById(e), a = gj.grid.methods.getRowById(this, e).children("td"), r = this.data("columns"); for (t = 0; t < a.length; t++)gj.grid.plugins.inlineEditing.private.displayMode(this, $(a[t]), r[t], !1); return gj.grid.plugins.inlineEditing.events.rowDataChanged(this, e, i), this }, cancel: function (e) { this.getById(e); var t, i = gj.grid.methods.getRowById(this, e).children("td"), a = this.data("columns"); for (t = 0; t < i.length; t++)gj.grid.plugins.inlineEditing.private.displayMode(this, $(i[t]), a[t], !0); return this } }, gj.grid.plugins.inlineEditing.events = { cellDataChanged: function (e, t, i, a, r, n) { e.triggerHandler("cellDataChanged", [t, i, a, r, n]) }, rowDataChanged: function (e, t, i) { e.triggerHandler("rowDataChanged", [t, i]) } }, gj.grid.plugins.inlineEditing.configure = function (e, t, i) { var a = e.data(); $.extend(!0, e, gj.grid.plugins.inlineEditing.public), i.inlineEditing && (e.on("dataBound", function () { e.find("span.gj-dirty").remove() }), e.on("rowDataBound", function (t, i, a, r) { e.cancel(a) })), "command" === a.inlineEditing.mode ? (gj.grid.plugins.inlineEditing.private.localization(a), t.inlineEditing.managementColumn && a.columns.push(t.inlineEditing.managementColumnConfig)) : e.on("cellDataBound", function (t, i, r, n, o) { n.editor && ("editOnly" === n.mode ? gj.grid.plugins.inlineEditing.private.editMode(e, i.parent(), n, o) : i.parent("td").on("dblclick" === a.inlineEditing.mode ? "dblclick" : "click", function () { gj.grid.plugins.inlineEditing.private.editMode(e, i.parent(), n, o) })) }) }, gj.grid.plugins.optimisticPersistence = { config: { base: { optimisticPersistence: { localStorage: void 0, sessionStorage: void 0 } } }, private: { applyParams: function (e) { var t, i = e.data(), a = {}; (t = JSON.parse(sessionStorage.getItem("gj.grid." + i.guid))) && t.optimisticPersistence && $.extend(a, t.optimisticPersistence), (t = JSON.parse(localStorage.getItem("gj.grid." + i.guid))) && t.optimisticPersistence && $.extend(a, t.optimisticPersistence), $.extend(i.params, a) }, saveParams: function (e) { var t, i, a = e.data(), r = { optimisticPersistence: {} }; if (a.optimisticPersistence.sessionStorage) { for (t = 0; t < a.optimisticPersistence.sessionStorage.length; t++)i = a.optimisticPersistence.sessionStorage[t], r.optimisticPersistence[i] = a.params[i]; r = $.extend(!0, JSON.parse(sessionStorage.getItem("gj.grid." + a.guid)), r), sessionStorage.setItem("gj.grid." + a.guid, JSON.stringify(r)) } if (a.optimisticPersistence.localStorage) { for (r = { optimisticPersistence: {} }, t = 0; t < a.optimisticPersistence.localStorage.length; t++)i = a.optimisticPersistence.localStorage[t], r.optimisticPersistence[i] = a.params[i]; r = $.extend(!0, JSON.parse(localStorage.getItem("gj.grid." + a.guid)), r), localStorage.setItem("gj.grid." + a.guid, JSON.stringify(r)) } } }, configure: function (e, t, i) { t.guid && (t.optimisticPersistence.localStorage || t.optimisticPersistence.sessionStorage) && (gj.grid.plugins.optimisticPersistence.private.applyParams(e), e.on("dataBound", function (t) { gj.grid.plugins.optimisticPersistence.private.saveParams(e) })) } }, gj.grid.plugins.pagination = { config: { base: { style: { pager: { panel: "", stateDisabled: "", activeButton: "" } }, paramNames: { page: "page", limit: "limit" }, pager: { limit: 10, sizes: [5, 10, 20, 100], leftControls: void 0, rightControls: void 0 } }, bootstrap: { style: { pager: { panel: "", stateDisabled: "" } } }, bootstrap4: { style: { pager: { panel: "btn-toolbar", stateDisabled: "" } } }, glyphicons: { icons: { first: '<span class="glyphicon glyphicon-step-backward"></span>', previous: '<span class="glyphicon glyphicon-backward"></span>', next: '<span class="glyphicon glyphicon-forward"></span>', last: '<span class="glyphicon glyphicon-step-forward"></span>', refresh: '<span class="glyphicon glyphicon-refresh"></span>' } }, materialicons: { icons: { first: '<i class="gj-icon first-page" />', previous: '<i class="gj-icon chevron-left" />', next: '<i class="gj-icon chevron-right" />', last: '<i class="gj-icon last-page" />', refresh: '<i class="gj-icon refresh" />' } }, fontawesome: { icons: { first: '<i class="fa fa-fast-backward" aria-hidden="true"></i>', previous: '<i class="fa fa-backward" aria-hidden="true"></i>', next: '<i class="fa fa-forward" aria-hidden="true"></i>', last: '<i class="fa fa-fast-forward" aria-hidden="true"></i>', refresh: '<i class="fa fa-refresh" aria-hidden="true"></i>' } } }, private: { init: function (e) { var t, i, a, r, n, o, d, s, l, g; if ((a = e.data()).pager) for (a.params[a.paramNames.page] || (a.params[a.paramNames.page] = 1), a.params[a.paramNames.limit] || (a.params[a.paramNames.limit] = a.pager.limit), gj.grid.plugins.pagination.private.localization(a), t = $('<tr data-role="pager"/>'), i = $("<th/>"), t.append(i), n = $('<div data-role="display" />').addClass(a.style.pager.panel).css({ float: "left" }), o = $('<div data-role="display" />').addClass(a.style.pager.panel).css({ float: "right" }), i.append(n).append(o), d = $("<tfoot />").append(t), e.append(d), gj.grid.plugins.pagination.private.updatePagerColSpan(e), s = gj.grid.methods.clone(a.pager.leftControls), $.each(s, function () { n.append(this) }), l = gj.grid.methods.clone(a.pager.rightControls), $.each(l, function () { o.append(this) }), r = e.find("tfoot [data-role]"), g = 0; g < r.length; g++)gj.grid.plugins.pagination.private.initPagerControl($(r[g]), e) }, localization: function (e) { "bootstrap" === e.uiLibrary ? gj.grid.plugins.pagination.private.localizationBootstrap(e) : "bootstrap4" === e.uiLibrary ? gj.grid.plugins.pagination.private.localizationBootstrap4(e) : gj.grid.plugins.pagination.private.localizationMaterialDesign(e) }, localizationBootstrap: function (e) { var t = gj.grid.messages[e.locale]; void 0 === e.pager.leftControls && (e.pager.leftControls = [$('<button type="button" class="btn btn-default btn-sm">' + (e.icons.first || t.First) + "</button>").attr("title", t.FirstPageTooltip).attr("data-role", "page-first"), $('<button type="button" class="btn btn-default btn-sm">' + (e.icons.previous || t.Previous) + "</button>").attr("title", t.PreviousPageTooltip).attr("data-role", "page-previous"), $("<div>" + t.Page + "</div>"), $('<input data-role="page-number" class="form-control input-sm" type="text" value="0">'), $("<div>" + t.Of + "</div>"), $('<div data-role="page-label-last">0</div>'), $('<button type="button" class="btn btn-default btn-sm">' + (e.icons.next || t.Next) + "</button>").attr("title", t.NextPageTooltip).attr("data-role", "page-next"), $('<button type="button" class="btn btn-default btn-sm">' + (e.icons.last || t.Last) + "</button>").attr("title", t.LastPageTooltip).attr("data-role", "page-last"), $('<button type="button" class="btn btn-default btn-sm">' + (e.icons.refresh || t.Refresh) + "</button>").attr("title", t.Refresh).attr("data-role", "page-refresh"), $('<select data-role="page-size" class="form-control input-sm" width="60"></select>')]), void 0 === e.pager.rightControls && (e.pager.rightControls = [$("<div>" + t.DisplayingRecords + "</div>"), $('<div data-role="record-first">0</div>'), $("<div>-</div>"), $('<div data-role="record-last">0</div>'), $("<div>" + t.Of + "</div>"), $('<div data-role="record-total">0</div>')]) }, localizationBootstrap4: function (e) { var t = gj.grid.messages[e.locale]; void 0 === e.pager.leftControls && (e.pager.leftControls = [$('<button class="btn btn-default btn-sm gj-cursor-pointer">' + (e.icons.first || t.First) + "</button>").attr("title", t.FirstPageTooltip).attr("data-role", "page-first"), $('<button class="btn btn-default btn-sm gj-cursor-pointer">' + (e.icons.previous || t.Previous) + "</button>").attr("title", t.PreviousPageTooltip).attr("data-role", "page-previous"), $("<div>" + t.Page + "</div>"), $('<div class="input-group"><input data-role="page-number" class="form-control form-control-sm" type="text" value="0"></div>'), $("<div>" + t.Of + "</div>"), $('<div data-role="page-label-last">0</div>'), $('<button class="btn btn-default btn-sm gj-cursor-pointer">' + (e.icons.next || t.Next) + "</button>").attr("title", t.NextPageTooltip).attr("data-role", "page-next"), $('<button class="btn btn-default btn-sm gj-cursor-pointer">' + (e.icons.last || t.Last) + "</button>").attr("title", t.LastPageTooltip).attr("data-role", "page-last"), $('<button class="btn btn-default btn-sm gj-cursor-pointer">' + (e.icons.refresh || t.Refresh) + "</button>").attr("title", t.Refresh).attr("data-role", "page-refresh"), $('<select data-role="page-size" class="form-control input-sm" width="60"></select>')]), void 0 === e.pager.rightControls && (e.pager.rightControls = [$("<div>" + t.DisplayingRecords + "&nbsp;</div>"), $('<div data-role="record-first">0</div>'), $("<div>-</div>"), $('<div data-role="record-last">0</div>'), $("<div>" + t.Of + "</div>"), $('<div data-role="record-total">0</div>')]) }, localizationMaterialDesign: function (e) { var t = gj.grid.messages[e.locale]; void 0 === e.pager.leftControls && (e.pager.leftControls = []), void 0 === e.pager.rightControls && (e.pager.rightControls = [$('<span class="">' + t.RowsPerPage + "</span>"), $('<select data-role="page-size" class="gj-grid-md-limit-select" width="52"></select></div>'), $('<span class="gj-md-spacer-32">&nbsp;</span>'), $('<span data-role="record-first" class="">0</span>'), $('<span class="">-</span>'), $('<span data-role="record-last" class="">0</span>'), $('<span class="gj-grid-mdl-pager-label">' + t.Of + "</span>"), $('<span data-role="record-total" class="">0</span>'), $('<span class="gj-md-spacer-32">&nbsp;</span>'), $('<button class="gj-button-md">' + (e.icons.previous || t.Previous) + "</button>").attr("title", t.PreviousPageTooltip).attr("data-role", "page-previous").addClass(e.icons.first ? "gj-button-md-icon" : ""), $('<span class="gj-md-spacer-24">&nbsp;</span>'), $('<button class="gj-button-md">' + (e.icons.next || t.Next) + "</button>").attr("title", t.NextPageTooltip).attr("data-role", "page-next").addClass(e.icons.first ? "gj-button-md-icon" : "")]) }, initPagerControl: function (e, t) { var i = t.data(); switch (e.data("role")) { case "page-size": i.pager.sizes && 0 < i.pager.sizes.length ? (e.show(), $.each(i.pager.sizes, function () { e.append($("<option/>").attr("value", this.toString()).text(this.toString())) }), e.change(function () { var e = parseInt(this.value, 10); i.params[i.paramNames.limit] = e, gj.grid.plugins.pagination.private.changePage(t, 1), gj.grid.plugins.pagination.events.pageSizeChange(t, e) }), e.val(i.params[i.paramNames.limit]), gj.dropdown && e.dropdown({ uiLibrary: i.uiLibrary, iconsLibrary: i.iconsLibrary, fontSize: e.css("font-size"), style: { presenter: "btn btn-default btn-sm" } })) : e.hide(); break; case "page-refresh": e.on("click", function () { t.reload() }) } }, reloadPager: function (e, t) { var i, a, r, n, o, d, s, l; if ((d = e.data()).pager) { for (i = 0 === t ? 0 : parseInt(d.params[d.paramNames.page], 10), a = parseInt(d.params[d.paramNames.limit], 10), r = Math.ceil(t / a), o = (n = 0 === i ? 0 : a * (i - 1) + 1) + a > t ? t : n + a - 1, s = e.find("TFOOT [data-role]"), l = 0; l < s.length; l++)gj.grid.plugins.pagination.private.reloadPagerControl($(s[l]), e, i, r, n, o, t); gj.grid.plugins.pagination.private.updatePagerColSpan(e) } }, reloadPagerControl: function (e, t, i, a, r, n, o) { var d; switch (e.data("role")) { case "page-first": gj.grid.plugins.pagination.private.assignPageHandler(t, e, 1, i < 2); break; case "page-previous": gj.grid.plugins.pagination.private.assignPageHandler(t, e, i - 1, i < 2); break; case "page-number": e.val(i).off("change").on("change", gj.grid.plugins.pagination.private.createChangePageHandler(t, i)); break; case "page-label-last": e.text(a); break; case "page-next": gj.grid.plugins.pagination.private.assignPageHandler(t, e, i + 1, a === i); break; case "page-last": gj.grid.plugins.pagination.private.assignPageHandler(t, e, a, a === i); break; case "page-button-one": d = 1 === i ? 1 : i == a ? i - 2 : i - 1, gj.grid.plugins.pagination.private.assignButtonHandler(t, e, i, d, a); break; case "page-button-two": d = 1 === i ? 2 : i == a ? a - 1 : i, gj.grid.plugins.pagination.private.assignButtonHandler(t, e, i, d, a); break; case "page-button-three": d = 1 === i ? i + 2 : i == a ? i : i + 1, gj.grid.plugins.pagination.private.assignButtonHandler(t, e, i, d, a); break; case "record-first": e.text(r); break; case "record-last": e.text(n); break; case "record-total": e.text(o) } }, assignPageHandler: function (e, t, i, a) { var r = e.data().style.pager; a ? t.addClass(r.stateDisabled).prop("disabled", !0).off("click") : t.removeClass(r.stateDisabled).prop("disabled", !1).off("click").on("click", function () { gj.grid.plugins.pagination.private.changePage(e, i) }) }, assignButtonHandler: function (e, t, i, a, r) { var n = e.data().style.pager; a < 1 || a > r ? t.hide() : (t.show().off("click").text(a), a === i ? t.addClass(n.activeButton) : t.removeClass(n.activeButton).on("click", function () { gj.grid.plugins.pagination.private.changePage(e, a) })) }, createChangePageHandler: function (e, t) { return function () { e.data(); var t = parseInt(this.value, 10); gj.grid.plugins.pagination.private.changePage(e, t) } }, changePage: function (e, t) { var i = e.data(); !1 === gj.grid.plugins.pagination.events.pageChanging(e, t) || isNaN(t) || (e.find('TFOOT [data-role="page-number"]').val(t), i.params[i.paramNames.page] = t), e.reload() }, updatePagerColSpan: function (e) { var t = e.find('tfoot > tr[data-role="pager"] > th'); t && t.length && t.attr("colspan", gj.grid.methods.countVisibleColumns(e)) }, isLastRecordVisible: function (e) { var t = !0, i = e.data(), a = parseInt(i.params[i.paramNames.limit], 10), r = parseInt(i.params[i.paramNames.page], 10), n = e.count(); return a && r && (t = (r - 1) * a + n === i.totalRecords), t } }, public: { getAll: function (e) { var t, i, a = this.data(); return $.isArray(a.dataSource) ? e ? a.dataSource : a.params[a.paramNames.limit] && a.params[a.paramNames.page] ? (t = parseInt(a.params[a.paramNames.limit], 10), i = (parseInt(a.params[a.paramNames.page], 10) - 1) * t, a.records.slice(i, i + t)) : a.records : a.records } }, events: { pageSizeChange: function (e, t) { e.triggerHandler("pageSizeChange", [t]) }, pageChanging: function (e, t) { e.triggerHandler("pageChanging", [t]) } }, configure: function (e, t, i) { $.extend(!0, e, gj.grid.plugins.pagination.public), e.data(), i.pager && (gj.grid.methods.isLastRecordVisible = gj.grid.plugins.pagination.private.isLastRecordVisible, e.on("initialized", function () { gj.grid.plugins.pagination.private.init(e) }), e.on("dataBound", function (t, i, a) { gj.grid.plugins.pagination.private.reloadPager(e, a) }), e.on("columnShow", function () { gj.grid.plugins.pagination.private.updatePagerColSpan(e) }), e.on("columnHide", function () { gj.grid.plugins.pagination.private.updatePagerColSpan(e) })) } }, gj.grid.plugins.responsiveDesign = { config: { base: { resizeCheckInterval: 500, responsive: !1, showHiddenColumnsAsDetails: !1, defaultColumn: { priority: void 0, minWidth: 250 }, style: { rowDetailItem: "" } }, bootstrap: { style: { rowDetailItem: "col-lg-4" } } }, private: { orderColumns: function (e) { var t = []; if (e.columns && e.columns.length) { for (i = 0; i < e.columns.length; i++)t.push({ position: i, field: e.columns[i].field, minWidth: e.columns[i].width || e.columns[i].minWidth || e.defaultColumn.minWidth, priority: e.columns[i].priority || 0 }); t.sort(function (e, t) { var i = 0; return e.priority < t.priority ? i = -1 : e.priority > t.priority && (i = 1), i }) } return t }, updateDetails: function (e) { var t, i, a, r, n, o, d, s, l; for (t = e.find('tbody > tr[data-role="row"]'), i = e.data(), a = 0; a < t.length; a++) { for (o = (n = $(t[a])).data("details"), r = 0; r < i.columns.length; r++)s = i.columns[r], d = o && o.find('div[data-id="' + s.field + '"]'), i.columns[r].hidden ? (l = "<b>" + (s.title || s.field) + "</b>: {" + s.field + "}", d && d.length ? d.empty().html(l) : ((d = $('<div data-id="' + s.field + '"/>').html(l)).addClass(i.style.rowDetailItem), o && o.length || (o = $('<div class="row"/>')), o.append(d))) : d && d.length && d.remove(); e.updateDetails(n) } } }, public: { oldWidth: void 0, resizeCheckIntervalId: void 0, makeResponsive: function () { var e, t, i = 0, a = this.data(), r = gj.grid.plugins.responsiveDesign.private.orderColumns(a); for (e = 0; e < r.length; e++)(t = this.find("thead>tr>th:eq(" + r[e].position + ")")).is(":visible") && r[e].minWidth < t.width() && (i += t.width() - r[e].minWidth); if (i) for (e = 0; e < r.length; e++)!(t = this.find("thead>tr>th:eq(" + r[e].position + ")")).is(":visible") && r[e].minWidth <= i && (this.showColumn(r[e].field), i -= t.width()); for (e = r.length - 1; e >= 0; e--)(t = this.find("thead>tr>th:eq(" + r[e].position + ")")).is(":visible") && r[e].priority && r[e].minWidth > t.outerWidth() && this.hideColumn(r[e].field); return this } }, events: { resize: function (e, t, i) { e.triggerHandler("resize", [t, i]) } }, configure: function (e, t, i) { $.extend(!0, e, gj.grid.plugins.responsiveDesign.public), t.responsive && (e.on("initialized", function () { e.makeResponsive(), e.oldWidth = e.width(), e.resizeCheckIntervalId = setInterval(function () { var t = e.width(); t !== e.oldWidth && gj.grid.plugins.responsiveDesign.events.resize(e, t, e.oldWidth), e.oldWidth = t }, t.resizeCheckInterval) }), e.on("destroy", function () { e.resizeCheckIntervalId && clearInterval(e.resizeCheckIntervalId) }), e.on("resize", function () { e.makeResponsive() })), t.showHiddenColumnsAsDetails && gj.grid.plugins.expandCollapseRows && (e.on("dataBound", function () { gj.grid.plugins.responsiveDesign.private.updateDetails(e) }), e.on("columnHide", function () { gj.grid.plugins.responsiveDesign.private.updateDetails(e) }), e.on("columnShow", function () { gj.grid.plugins.responsiveDesign.private.updateDetails(e) }), e.on("rowDataBound", function () { gj.grid.plugins.responsiveDesign.private.updateDetails(e) })) } }, gj.grid.plugins.toolbar = { config: { base: { toolbarTemplate: void 0, title: void 0, style: { toolbar: "gj-grid-md-toolbar" } }, bootstrap: { style: { toolbar: "gj-grid-bootstrap-toolbar" } }, bootstrap4: { style: { toolbar: "gj-grid-bootstrap-4-toolbar" } } }, private: { init: function (e) { var t, i, a; t = e.data(), i = e.prev('div[data-role="toolbar"]'), (void 0 !== t.toolbarTemplate || void 0 !== t.title || i.length > 0) && (0 === i.length && (i = $('<div data-role="toolbar"></div>'), e.before(i)), i.addClass(t.style.toolbar), 0 === i.children().length && t.toolbarTemplate && i.append(t.toolbarTemplate), 0 === (a = i.find('[data-role="title"]')).length && (a = $('<div data-role="title"/>'), i.prepend(a)), t.title && a.text(t.title), t.minWidth && i.css("min-width", t.minWidth)) } }, public: { title: function (e) { var t = this.parent().find('div[data-role="toolbar"] [data-role="title"]'); return void 0 !== e ? (t.text(e), this) : t.text() } }, configure: function (e) { $.extend(!0, e, gj.grid.plugins.toolbar.public), e.on("initialized", function () { gj.grid.plugins.toolbar.private.init(e) }), e.on("destroying", function () { e.prev('[data-role="toolbar"]').remove() }) } }, gj.grid.plugins.resizableColumns = { config: { base: { resizableColumns: !1 } }, private: { init: function (e, t) { var i, a, r, n, o, d; if ((i = e.find('thead tr[data-role="caption"] th')).length) { for (r = 0; r < i.length - 1; r++)a = $(i[r]), n = $('<div class="gj-grid-column-resizer-wrapper" />'), d = parseInt(a.css("padding-right"), 10) + 3, (o = $('<span class="gj-grid-column-resizer" />').css("margin-right", "-" + d + "px")).draggable({ start: function () { e.addClass("gj-unselectable"), e.addClass("gj-grid-resize-cursor") }, stop: function () { e.removeClass("gj-unselectable"), e.removeClass("gj-grid-resize-cursor"), this.style.removeProperty("top"), this.style.removeProperty("left"), this.style.removeProperty("position") }, drag: gj.grid.plugins.resizableColumns.private.createResizeHandle(e, a, t.columns[r]) }), a.append(n.append(o)); for (r = 0; r < i.length; r++)(a = $(i[r])).attr("width") || a.attr("width", a.outerWidth()) } }, createResizeHandle: function (e, t, i) { var a = e.data(); return function (r, n) { var o, d, s, l, g, c, p = parseInt(t.attr("width"), 10), u = gj.core.position(this), h = (n.top, u.top, n.left - u.left); if (p || (p = t.outerWidth()), h && (g = p + h, i.width = g, t.attr("width", g), d = t[0].cellIndex, l = t[0].parentElement.children[d + 1], c = parseInt($(l).attr("width"), 10) - h, l.setAttribute("width", c), a.resizableColumns)) for (s = e[0].tBodies[0].children, o = 0; o < s.length; o++)s[o].cells[d].setAttribute("width", g), (l = s[o].cells[d + 1]).setAttribute("width", c) } } }, public: {}, configure: function (e, t, i) { $.extend(!0, e, gj.grid.plugins.resizableColumns.public), t.resizableColumns && gj.draggable && e.on("initialized", function () { gj.grid.plugins.resizableColumns.private.init(e, t) }) } }, gj.grid.plugins.rowReorder = { config: { base: { rowReorder: !1, rowReorderColumn: void 0, orderNumberField: void 0, style: { targetRowIndicatorTop: "gj-grid-row-reorder-indicator-top", targetRowIndicatorBottom: "gj-grid-row-reorder-indicator-bottom" } } }, private: { init: function (e) { var t, i, a, r = e.find('tbody tr[data-role="row"]'); for (e.data("rowReorderColumn") && (i = gj.grid.methods.getColumnPosition(e.data("columns"), e.data("rowReorderColumn"))), t = 0; t < r.length; t++)a = $(r[t]), void 0 !== i ? a.find("td:eq(" + i + ")").on("mousedown", gj.grid.plugins.rowReorder.private.createRowMouseDownHandler(e, a)) : a.on("mousedown", gj.grid.plugins.rowReorder.private.createRowMouseDownHandler(e, a)) }, createRowMouseDownHandler: function (e, t) { return function (i) { var a, r, n = e.clone(), o = e.data("columns"); for (e.addClass("gj-unselectable"), $("body").append(n), n.attr("data-role", "draggable-clone").css("cursor", "move"), n.children("thead").remove().children("tfoot").remove(), n.find('tbody tr:not([data-position="' + t.data("position") + '"])').remove(), r = n.find("tbody tr td"), a = 0; a < r.length; a++)o[a].width && r[a].setAttribute("width", o[a].width); n.draggable({ stop: gj.grid.plugins.rowReorder.private.createDragStopHandler(e, t) }), n.css({ position: "absolute", top: t.offset().top, left: t.offset().left, width: t.width(), zIndex: 1 }), "true" === t.attr("data-droppable") && t.droppable("destroy"), t.siblings('tr[data-role="row"]').each(function () { var e = $(this); "true" === e.attr("data-droppable") && e.droppable("destroy"), e.droppable({ over: gj.grid.plugins.rowReorder.private.createDroppableOverHandler(t), out: gj.grid.plugins.rowReorder.private.droppableOut }) }), n.trigger("mousedown") } }, createDragStopHandler: function (e, t) { return function (i, a) { $('table[data-role="draggable-clone"]').draggable("destroy").remove(), e.removeClass("gj-unselectable"), t.siblings('tr[data-role="row"]').each(function () { var i, r, n, o, d, s = $(this), l = s.data("position"), g = t.data("position"), c = e.data(); if (s.droppable("isOver", a)) { for (l < g ? s.before(t) : s.after(t), c.records.splice(l - 1, 0, c.records.splice(g - 1, 1)[0]), i = s.parent().find('tr[data-role="row"]'), n = 0; n < i.length; n++)$(i[n]).attr("data-position", n + 1); if (c.orderNumberField) { for (n = 0; n < c.records.length; n++)c.records[n][c.orderNumberField] = n + 1; for (n = 0; n < i.length; n++)r = $(i[n]), d = gj.grid.methods.getId(r, c.primaryKey, r.attr("data-position")), o = gj.grid.methods.getByPosition(e, r.attr("data-position")), e.setCellContent(d, c.orderNumberField, o[c.orderNumberField]) } } s.removeClass("gj-grid-top-border"), s.removeClass("gj-grid-bottom-border"), s.droppable("destroy") }) } }, createDroppableOverHandler: function (e) { return function (t) { var i = $(this); i.data("position") < e.data("position") ? i.addClass("gj-grid-top-border") : i.addClass("gj-grid-bottom-border") } }, droppableOut: function () { $(this).removeClass("gj-grid-top-border"), $(this).removeClass("gj-grid-bottom-border") } }, public: {}, configure: function (e, t, i) { $.extend(!0, e, gj.grid.plugins.rowReorder.public), t.rowReorder && gj.draggable && gj.droppable && e.on("dataBound", function () { gj.grid.plugins.rowReorder.private.init(e) }) } }, gj.grid.plugins.export = { config: { base: {} }, public: { getCSV: function (e) { var t, i, a = "", r = "", n = this.data().columns, o = this.getAll(e); if (o.length) { for (t = 0; t < n.length; t++)gj.grid.plugins.export.public.isColumnApplicable(n[t]) && (a += '"' + (n[t].title || n[t].field).replace(/<[^>]+>/g, " ") + '",'); for (r += a.slice(0, a.length - 1) + "\r\n", t = 0; t < o.length; t++) { for (a = "", i = 0; i < n.length; i++)gj.grid.plugins.export.public.isColumnApplicable(n[i]) && (a += '"' + o[t][n[i].field] + '",'); r += a.slice(0, a.length - 1) + "\r\n" } } return r }, downloadCSV: function (e, t) { var i = document.createElement("a"); return document.body.appendChild(i), i.download = e || "griddata.csv", window.navigator.userAgent.indexOf("Edge") > -1 ? i.href = URL.createObjectURL(new Blob([this.getCSV(t)], { type: "text/csv;charset=utf-8;" })) : i.href = "data:text/csv;charset=utf-8," + escape(this.getCSV(t)), i.click(), document.body.removeChild(i), this }, isColumnApplicable: function (e) { return !0 !== e.hidden && !e.role } }, configure: function (e) { $.extend(!0, e, gj.grid.plugins.export.public) } }, gj.grid.plugins.columnReorder = { config: { base: { columnReorder: !1, dragReady: !1, style: { targetRowIndicatorTop: "gj-grid-row-reorder-indicator-top", targetRowIndicatorBottom: "gj-grid-row-reorder-indicator-bottom" } } }, private: { init: function (e) { var t, i, a = e.find("thead tr th"); for (t = 0; t < a.length; t++)(i = $(a[t])).on("mousedown", gj.grid.plugins.columnReorder.private.createMouseDownHandler(e, i)), i.on("mousemove", gj.grid.plugins.columnReorder.private.createMouseMoveHandler(e, i)), i.on("mouseup", gj.grid.plugins.columnReorder.private.createMouseUpHandler(e, i)) }, createMouseDownHandler: function (e) { return function (t) { e.timeout = setTimeout(function () { e.data("dragReady", !0) }, 100) } }, createMouseUpHandler: function (e) { return function (t) { clearTimeout(e.timeout), e.data("dragReady", !1) } }, createMouseMoveHandler: function (e, t) { return function (i) { var a, r; e.data("dragReady") && (e.data("dragReady", !1), a = e.clone(), r = t.index(), e.addClass("gj-unselectable"), $("body").append(a), a.attr("data-role", "draggable-clone").css("cursor", "move"), a.find("thead tr th:eq(" + r + ")").siblings().remove(), a.find('tbody tr[data-role != "row"]').remove(), a.find("tbody tr td:nth-child(" + (r + 1) + ")").siblings().remove(), a.find("tfoot").remove(), a.draggable({ stop: gj.grid.plugins.columnReorder.private.createDragStopHandler(e, t) }), a.css({ position: "absolute", top: t.offset().top, left: t.offset().left, width: t.width(), zIndex: 1 }), "true" === t.attr("data-droppable") && t.droppable("destroy"), t.siblings("th").each(function () { var i = $(this); "true" === i.attr("data-droppable") && i.droppable("destroy"), i.droppable({ over: gj.grid.plugins.columnReorder.private.createDroppableOverHandler(e, t), out: gj.grid.plugins.columnReorder.private.droppableOut }) }), a.trigger("mousedown")) } }, createDragStopHandler: function (e, t) { return function (i, a) { $('table[data-role="draggable-clone"]').draggable("destroy").remove(), e.removeClass("gj-unselectable"), t.siblings("th").each(function () { var i = $(this), r = e.data(), n = gj.grid.methods.getColumnPosition(r.columns, i.data("field")), o = gj.grid.methods.getColumnPosition(r.columns, t.data("field")); i.removeClass("gj-grid-left-border").removeClass("gj-grid-right-border"), i.closest("table").find('tbody tr[data-role="row"] td:nth-child(' + (i.index() + 1) + ")").removeClass("gj-grid-left-border").removeClass("gj-grid-right-border"), i.droppable("isOver", a) && (n < o ? i.before(t) : i.after(t), gj.grid.plugins.columnReorder.private.moveRowCells(e, o, n), r.columns.splice(n, 0, r.columns.splice(o, 1)[0])), i.droppable("destroy") }) } }, moveRowCells: function (e, t, i) { var a, r, n = e.find('tbody tr[data-role="row"]'); for (a = 0; a < n.length; a++)r = $(n[a]), i < t ? r.find("td:eq(" + i + ")").before(r.find("td:eq(" + t + ")")) : r.find("td:eq(" + i + ")").after(r.find("td:eq(" + t + ")")) }, createDroppableOverHandler: function (e, t) { return function (i) { var a = $(this), r = e.data(); gj.grid.methods.getColumnPosition(r.columns, a.data("field")) < gj.grid.methods.getColumnPosition(r.columns, t.data("field")) ? (a.addClass("gj-grid-left-border"), e.find('tbody tr[data-role="row"] td:nth-child(' + (a.index() + 1) + ")").addClass("gj-grid-left-border")) : (a.addClass("gj-grid-right-border"), e.find('tbody tr[data-role="row"] td:nth-child(' + (a.index() + 1) + ")").addClass("gj-grid-right-border")) } }, droppableOut: function () { var e = $(this); e.removeClass("gj-grid-left-border").removeClass("gj-grid-right-border"), e.closest("table").find('tbody tr[data-role="row"] td:nth-child(' + (e.index() + 1) + ")").removeClass("gj-grid-left-border").removeClass("gj-grid-right-border") } }, public: {}, configure: function (e, t, i) { $.extend(!0, e, gj.grid.plugins.columnReorder.public), t.columnReorder && e.on("initialized", function () { gj.grid.plugins.columnReorder.private.init(e) }) } }, gj.grid.plugins.headerFilter = { config: { base: { defaultColumnSettings: { filterable: !0 }, headerFilter: { type: "onenterkeypress" } } }, private: { init: function (e) { var t, i, a, r = e.data(), n = $('<tr data-role="filter"/>'); for (t = 0; t < r.columns.length; t++)i = $("<th/>"), r.columns[t].filterable && (a = $('<input data-field="' + r.columns[t].field + '" class="gj-width-full" />'), "onchange" === r.headerFilter.type ? a.on("input propertychange", function (t) { gj.grid.plugins.headerFilter.private.reload(e, $(this)) }) : (a.on("keypress", function (t) { 13 == t.which && gj.grid.plugins.headerFilter.private.reload(e, $(this)) }), a.on("blur", function (t) { gj.grid.plugins.headerFilter.private.reload(e, $(this)) })), i.append(a)), r.columns[t].hidden && i.hide(), n.append(i); e.children("thead").append(n) }, reload: function (e, t) { var i = {}; i[t.data("field")] = t.val(), e.reload(i) } }, public: {}, events: {}, configure: function (e, t, i) { $.extend(!0, e, gj.grid.plugins.headerFilter.public), e.data(), i.headerFilter && e.on("initialized", function () { gj.grid.plugins.headerFilter.private.init(e) }) } }, gj.grid.plugins.grouping = { config: { base: { paramNames: { groupBy: "groupBy", groupByDirection: "groupByDirection" }, grouping: { groupBy: void 0, direction: "asc" }, icons: { expandGroup: '<i class="gj-icon plus" />', collapseGroup: '<i class="gj-icon minus" />' } }, fontawesome: { icons: { expandGroup: '<i class="fa fa-plus" aria-hidden="true"></i>', collapseGroup: '<i class="fa fa-minus" aria-hidden="true"></i>' } }, glyphicons: { icons: { expandGroup: '<span class="glyphicon glyphicon-plus" />', collapseGroup: '<span class="glyphicon glyphicon-minus" />' } } }, private: { init: function (e) { var t, i = e.data(); t = void 0, e.on("rowDataBound", function (a, r, n, o) { if (t !== o[i.grouping.groupBy] || 1 === r[0].rowIndex) { var d = gj.grid.methods.countVisibleColumns(e) - 1, s = $('<tr role="group" />'), l = $('<td class="gj-text-align-center gj-unselectable gj-cursor-pointer" />'); l.append('<div data-role="display">' + i.icons.collapseGroup + "</div>"), l.on("click", gj.grid.plugins.grouping.private.createExpandCollapseHandler(i)), s.append(l), s.append('<td colspan="' + d + '"><div data-role="display">' + i.grouping.groupBy + ": " + o[i.grouping.groupBy] + "</div></td>"), s.insertBefore(r), t = o[i.grouping.groupBy] } r.show() }), i.params[i.paramNames.groupBy] = i.grouping.groupBy, i.params[i.paramNames.groupByDirection] = i.grouping.direction }, grouping: function (e, t) { var i = e.data(); t.sort(gj.grid.methods.createDefaultSorter(i.grouping.direction, i.grouping.groupBy)) }, createExpandCollapseHandler: function (e) { return function (t) { var i = $(this), a = gj.grid.plugins.grouping.private; "row" === i.closest("tr").next(":visible").data("role") ? a.collapseGroup(e, i) : a.expandGroup(e, i) } }, collapseGroup: function (e, t) { var i = t.children('div[data-role="display"]'); t.closest("tr").nextUntil('[role="group"]').hide(), i.empty().append(e.icons.expandGroup) }, expandGroup: function (e, t) { var i = t.children('div[data-role="display"]'); t.closest("tr").nextUntil('[role="group"]').show(), i.empty().append(e.icons.collapseGroup) } }, public: {}, configure: function (e) { var t, i = e.data(); $.extend(!0, e, gj.grid.plugins.grouping.public), i.grouping && i.grouping.groupBy && (t = { title: "", width: i.defaultIconColumnWidth, align: "center", stopPropagation: !0, cssClass: "gj-cursor-pointer gj-unselectable" }, i.columns = [t].concat(i.columns), e.on("initialized", function () { gj.grid.plugins.grouping.private.init(e) }), e.on("dataFiltered", function (t, i) { gj.grid.plugins.grouping.private.grouping(e, i) })) } }, gj.grid.messages["en-us"] = { First: "First", Previous: "Previous", Next: "Next", Last: "Last", Page: "Page", FirstPageTooltip: "First Page", PreviousPageTooltip: "Previous Page", NextPageTooltip: "Next Page", LastPageTooltip: "Last Page", Refresh: "Refresh", Of: "of", DisplayingRecords: "Displaying records", RowsPerPage: "Rows per page:", Edit: "Edit", Delete: "Delete", Update: "Update", Cancel: "Cancel", NoRecordsFound: "No records found.", Loading: "Loading..." }, gj.tree = { plugins: {} }, gj.tree.config = { base: { params: {}, autoLoad: !0, selectionType: "single", cascadeSelection: !1, dataSource: void 0, primaryKey: void 0, textField: "text", childrenField: "children", hasChildrenField: "hasChildren", imageCssClassField: "imageCssClass", imageUrlField: "imageUrl", imageHtmlField: "imageHtml", disabledField: "disabled", width: void 0, border: !1, uiLibrary: "materialdesign", iconsLibrary: "materialicons", autoGenId: 1, autoGenFieldName: "autoId_b5497cc5-7ef3-49f5-a7dc-4a932e1aee4a", indentation: 24, style: { wrapper: "gj-unselectable", list: "gj-list gj-list-md", item: void 0, active: "gj-list-md-active", leafIcon: void 0, border: "gj-tree-md-border" }, icons: { expand: '<i class="gj-icon chevron-right" />', collapse: '<i class="gj-icon chevron-down" />' } }, bootstrap: { style: { wrapper: "gj-unselectable gj-tree-bootstrap-3", list: "gj-list gj-list-bootstrap list-group", item: "list-group-item", active: "active", border: "gj-tree-bootstrap-border" }, iconsLibrary: "glyphicons" }, bootstrap4: { style: { wrapper: "gj-unselectable gj-tree-bootstrap-4", list: "gj-list gj-list-bootstrap", item: "list-group-item", active: "active", border: "gj-tree-bootstrap-border" }, icons: { expand: '<i class="gj-icon plus" />', collapse: '<i class="gj-icon minus" />' } }, materialicons: { style: { expander: "gj-tree-material-icons-expander" } }, fontawesome: { style: { expander: "gj-tree-font-awesome-expander" }, icons: { expand: '<i class="fa fa-plus" aria-hidden="true"></i>', collapse: '<i class="fa fa-minus" aria-hidden="true"></i>' } }, glyphicons: { style: { expander: "gj-tree-glyphicons-expander" }, icons: { expand: '<span class="glyphicon glyphicon-plus" />', collapse: '<span class="glyphicon glyphicon-minus" />' } } }, gj.tree.events = { initialized: function (e) { e.triggerHandler("initialized") }, dataBinding: function (e) { e.triggerHandler("dataBinding") }, dataBound: function (e) { e.triggerHandler("dataBound") }, select: function (e, t, i) { return e.triggerHandler("select", [t, i]) }, unselect: function (e, t, i) { return e.triggerHandler("unselect", [t, i]) }, expand: function (e, t, i) { return e.triggerHandler("expand", [t, i]) }, collapse: function (e, t, i) { return e.triggerHandler("collapse", [t, i]) }, enable: function (e, t) { return e.triggerHandler("enable", [t]) }, disable: function (e, t) { return e.triggerHandler("disable", [t]) }, destroying: function (e) { return e.triggerHandler("destroying") }, nodeDataBound: function (e, t, i, a) { return e.triggerHandler("nodeDataBound", [t, i, a]) } }, gj.tree.methods = { init: function (e) { return gj.widget.prototype.init.call(this, e, "tree"), gj.tree.methods.initialize.call(this), this.data("autoLoad") && this.reload(), this }, initialize: function () { var e = this.data(), t = $('<ul class="' + e.style.list + '"/>'); this.empty().addClass(e.style.wrapper).append(t), e.width && this.width(e.width), e.border && this.addClass(e.style.border), gj.tree.events.initialized(this) }, useHtmlDataSource: function (e, t) { t.dataSource = [] }, render: function (e, t) { var i; return t && ("string" == typeof t && JSON && (t = JSON.parse(t)), (i = e.data()).records = t, i.primaryKey || gj.tree.methods.genAutoId(i, i.records), gj.tree.methods.loadData(e)), e }, filter: function (e) { return e.data().dataSource }, genAutoId: function (e, t) { var i; for (i = 0; i < t.length; i++)t[i][e.autoGenFieldName] = e.autoGenId++ , t[i][e.childrenField] && t[i][e.childrenField].length && gj.tree.methods.genAutoId(e, t[i][e.childrenField]) }, loadData: function (e) { var t, i = e.data("records"), a = e.children("ul"); for (gj.tree.events.dataBinding(e), a.off().empty(), t = 0; t < i.length; t++)gj.tree.methods.appendNode(e, a, i[t], 1); gj.tree.events.dataBound(e) }, appendNode: function (e, t, i, a, r) { var n, o, d, s, l, g = e.data(), c = g.primaryKey ? i[g.primaryKey] : i[g.autoGenFieldName]; if (o = $('<li data-id="' + c + '" data-role="node" />').addClass(g.style.item), $wrapper = $('<div data-role="wrapper" />'), $expander = $('<span data-role="expander" data-mode="close"></span>').addClass(g.style.expander), $display = $('<span data-role="display">' + i[g.textField] + "</span>"), hasChildren = void 0 !== i[g.hasChildrenField] && "true" === i[g.hasChildrenField].toString().toLowerCase(), disabled = void 0 !== i[g.disabledField] && "true" === i[g.disabledField].toString().toLowerCase(), g.indentation && $wrapper.append('<span data-role="spacer" style="width: ' + g.indentation * (a - 1) + 'px;"></span>'), disabled ? gj.tree.methods.disableNode(e, o) : ($expander.on("click", gj.tree.methods.expanderClickHandler(e)), $display.on("click", gj.tree.methods.displayClickHandler(e))), $wrapper.append($expander), $wrapper.append($display), o.append($wrapper), r ? t.find("li:eq(" + (r - 1) + ")").before(o) : t.append(o), g.imageCssClassField && i[g.imageCssClassField] ? (s = $('<span data-role="image"><span class="' + i[g.imageCssClassField] + '"></span></span>')).insertBefore($display) : g.imageUrlField && i[g.imageUrlField] ? ((s = $('<span data-role="image"></span>')).insertBefore($display), (l = $('<img src="' + i[g.imageUrlField] + '"></img>')).attr("width", s.width()).attr("height", s.height()), s.append(l)) : g.imageHtmlField && i[g.imageHtmlField] && (s = $('<span data-role="image">' + i[g.imageHtmlField] + "</span>")).insertBefore($display), i[g.childrenField] && i[g.childrenField].length || hasChildren) { if ($expander.empty().append(g.icons.expand), d = $("<ul />").addClass(g.style.list).addClass("gj-hidden"), o.append(d), i[g.childrenField] && i[g.childrenField].length) for (n = 0; n < i[g.childrenField].length; n++)gj.tree.methods.appendNode(e, d, i[g.childrenField][n], a + 1) } else g.style.leafIcon ? $expander.addClass(g.style.leafIcon) : $expander.html("&nbsp;"); gj.tree.events.nodeDataBound(e, o, i.id, i) }, expanderClickHandler: function (e) { return function (t) { var i = $(this), a = i.closest("li"); "close" === i.attr("data-mode") ? e.expand(a) : e.collapse(a) } }, expand: function (e, t, i) { var a, r, n = t.find('>[data-role="wrapper"]>[data-role="expander"]'), o = e.data(), d = t.attr("data-id"), s = t.children("ul"); if (!1 !== gj.tree.events.expand(e, t, d) && s && s.length && (s.show(), n.attr("data-mode", "open"), n.empty().append(o.icons.collapse), i)) for (a = t.find("ul>li"), r = 0; r < a.length; r++)gj.tree.methods.expand(e, $(a[r]), i); return e }, collapse: function (e, t, i) { var a, r, n = t.find('>[data-role="wrapper"]>[data-role="expander"]'), o = e.data(), d = t.attr("data-id"), s = t.children("ul"); if (!1 !== gj.tree.events.collapse(e, t, d) && s && s.length && (s.hide(), n.attr("data-mode", "close"), n.empty().append(o.icons.expand), i)) for (a = t.find("ul>li"), r = 0; r < a.length; r++)gj.tree.methods.collapse(e, $(a[r]), i); return e }, expandAll: function (e) { var t, i = e.find("ul>li"); for (t = 0; t < i.length; t++)gj.tree.methods.expand(e, $(i[t]), !0); return e }, collapseAll: function (e) { var t, i = e.find("ul>li"); for (t = 0; t < i.length; t++)gj.tree.methods.collapse(e, $(i[t]), !0); return e }, displayClickHandler: function (e) { return function (t) { var i = $(this).closest("li"), a = e.data().cascadeSelection; "true" === i.attr("data-selected") ? gj.tree.methods.unselect(e, i, a) : ("single" === e.data("selectionType") && gj.tree.methods.unselectAll(e), gj.tree.methods.select(e, i, a)) } }, selectAll: function (e) { var t, i = e.find("ul>li"); for (t = 0; t < i.length; t++)gj.tree.methods.select(e, $(i[t]), !0); return e }, select: function (e, t, i) { var a, r, n = e.data(); if ("true" !== t.attr("data-selected") && !1 !== gj.tree.events.select(e, t, t.attr("data-id")) && (t.addClass(n.style.active).attr("data-selected", "true"), i)) for (r = t.find("ul>li"), a = 0; a < r.length; a++)gj.tree.methods.select(e, $(r[a]), i) }, unselectAll: function (e) { var t, i = e.find("ul>li"); for (t = 0; t < i.length; t++)gj.tree.methods.unselect(e, $(i[t]), !0); return e }, unselect: function (e, t, i) { var a, r; if (e.data(), "true" === t.attr("data-selected") && !1 !== gj.tree.events.unselect(e, t, t.attr("data-id")) && (t.removeClass(e.data().style.active).removeAttr("data-selected"), i)) for (r = t.find("ul>li"), a = 0; a < r.length; a++)gj.tree.methods.unselect(e, $(r[a]), i) }, getSelections: function (e) { var t, i, a, r = [], n = e.children("li"); if (n && n.length) for (t = 0; t < n.length; t++)"true" === (i = $(n[t])).attr("data-selected") ? r.push(i.attr("data-id")) : i.has("ul") && (a = gj.tree.methods.getSelections(i.children("ul"))).length && (r = r.concat(a)); return r }, getDataById: function (e, t, i) { var a, r = e.data(), n = void 0; for (a = 0; a < i.length; a++) { if (r.primaryKey && i[a][r.primaryKey] == t) { n = i[a]; break } if (i[a][r.autoGenFieldName] == t) { n = i[a]; break } if (i[a][r.childrenField] && i[a][r.childrenField].length && (n = gj.tree.methods.getDataById(e, t, i[a][r.childrenField]))) break } return n }, getDataByText: function (e, t, i) { var a, r = void 0, n = e.data(); for (a = 0; a < i.length; a++) { if (t === i[a][n.textField]) { r = i[a]; break } if (i[a][n.childrenField] && i[a][n.childrenField].length && (r = gj.tree.methods.getDataByText(e, t, i[a][n.childrenField]))) break } return r }, getNodeById: function (e, t) { var i, a, r = void 0, n = e.children("li"); if (n && n.length) for (i = 0; i < n.length; i++) { if (t == (a = $(n[i])).attr("data-id")) { r = a; break } if (a.has("ul") && (r = gj.tree.methods.getNodeById(a.children("ul"), t))) break } return r }, getNodeByText: function (e, t) { var i, a, r = void 0, n = e.children("li"); if (n && n.length) for (i = 0; i < n.length; i++) { if (t === (a = $(n[i])).find('>[data-role="wrapper"]>[data-role="display"]').text()) { r = a; break } if (a.has("ul") && (r = gj.tree.methods.getNodeByText(a.children("ul"), t))) break } return r }, addNode: function (e, t, i, a) { var r, n, o = e.data(); return i && i.length ? ("li" === i[0].tagName.toLowerCase() && (0 === i.children("ul").length && (i.find('[data-role="expander"]').empty().append(o.icons.collapse), i.append($("<ul />").addClass(o.style.list))), i = i.children("ul")), (n = e.getDataById(i.parent().data("id")))[o.childrenField] || (n[o.childrenField] = []), n[o.childrenField].push(t)) : (i = e.children("ul"), e.data("records").push(t)), r = i.parentsUntil('[data-type="tree"]', "ul").length + 1, o.primaryKey || gj.tree.methods.genAutoId(o, [t]), gj.tree.methods.appendNode(e, i, t, r, a), e }, remove: function (e, t) { return gj.tree.methods.removeDataById(e, t.attr("data-id"), e.data("records")), t.remove(), e }, removeDataById: function (e, t, i) { var a, r = e.data(); for (a = 0; a < i.length; a++) { if (r.primaryKey && i[a][r.primaryKey] == t) { i.splice(a, 1); break } if (i[a][r.autoGenFieldName] == t) { i.splice(a, 1); break } i[a][r.childrenField] && i[a][r.childrenField].length && gj.tree.methods.removeDataById(e, t, i[a][r.childrenField]) } }, update: function (e, t, i) { var a = e.data(), r = e.getNodeById(t); return e.getDataById(t), r.find('>[data-role="wrapper"]>[data-role="display"]').html(i[a.textField]), gj.tree.events.nodeDataBound(e, r, t, i), e }, getChildren: function (e, t, i) { var a, r, n = []; for (r = (i = void 0 === i || i) ? t.find("ul li") : t.find(">ul>li"), a = 0; a < r.length; a++)n.push($(r[a]).data("id")); return n }, enableAll: function (e) { var t, i = e.find("ul>li"); for (t = 0; t < i.length; t++)gj.tree.methods.enableNode(e, $(i[t]), !0); return e }, enableNode: function (e, t, i) { var a, r, n = t.find('>[data-role="wrapper"]>[data-role="expander"]'), o = t.find('>[data-role="wrapper"]>[data-role="display"]'); if (i = void 0 === i || i, t.removeClass("disabled"), n.on("click", gj.tree.methods.expanderClickHandler(e)), o.on("click", gj.tree.methods.displayClickHandler(e)), gj.tree.events.enable(e, t), i) for (r = t.find("ul>li"), a = 0; a < r.length; a++)gj.tree.methods.enableNode(e, $(r[a]), i) }, disableAll: function (e) { var t, i = e.find("ul>li"); for (t = 0; t < i.length; t++)gj.tree.methods.disableNode(e, $(i[t]), !0); return e }, disableNode: function (e, t, i) { var a, r, n = t.find('>[data-role="wrapper"]>[data-role="expander"]'), o = t.find('>[data-role="wrapper"]>[data-role="display"]'); if (i = void 0 === i || i, t.addClass("disabled"), n.off("click"), o.off("click"), gj.tree.events.disable(e, t), i) for (r = t.find("ul>li"), a = 0; a < r.length; a++)gj.tree.methods.disableNode(e, $(r[a]), i) }, destroy: function (e) { return e.data() && (gj.tree.events.destroying(e), e.xhr && e.xhr.abort(), e.off(), e.removeData(), e.removeAttr("data-type"), e.removeClass().empty()), e }, pathFinder: function (e, t, i, a) { var r, n = !1; for (r = 0; r < t.length; r++) { if (t[r].id == i) { n = !0; break } if (gj.tree.methods.pathFinder(e, t[r][e.childrenField], i, a)) { a.push(t[r].data[e.textField]), n = !0; break } } return n } }, gj.tree.widget = function (e, t) { var i = gj.tree.methods; return this.reload = function (e) { return gj.widget.prototype.reload.call(this, e) }, this.render = function (e) { return i.render(this, e) }, this.addNode = function (e, t, a) { return i.addNode(this, e, t, a) }, this.removeNode = function (e) { return i.remove(this, e) }, this.updateNode = function (e, t) { return i.update(this, e, t) }, this.destroy = function () { return i.destroy(this) }, this.expand = function (e, t) { return i.expand(this, e, t) }, this.collapse = function (e, t) { return i.collapse(this, e, t) }, this.expandAll = function () { return i.expandAll(this) }, this.collapseAll = function () { return i.collapseAll(this) }, this.getDataById = function (e) { return i.getDataById(this, e, this.data("records")) }, this.getDataByText = function (e) { return i.getDataByText(this, e, this.data("records")) }, this.getNodeById = function (e) { return i.getNodeById(this.children("ul"), e) }, this.getNodeByText = function (e) { return i.getNodeByText(this.children("ul"), e) }, this.getAll = function () { return this.data("records") }, this.select = function (e) { return i.select(this, e) }, this.unselect = function (e) { return i.unselect(this, e) }, this.selectAll = function () { return i.selectAll(this) }, this.unselectAll = function () { return i.unselectAll(this) }, this.getSelections = function () { return i.getSelections(this.children("ul")) }, this.getChildren = function (e, t) { return i.getChildren(this, e, t) }, this.parents = function (e) { var t = [], a = this.data(); return i.pathFinder(a, a.records, e, t), t.reverse() }, this.enable = function (e, t) { return i.enableNode(this, e, t) }, this.enableAll = function () { return i.enableAll(this) }, this.disable = function (e, t) { return i.disableNode(this, e, t) }, this.disableAll = function () { return i.disableAll(this) }, $.extend(e, this), "tree" !== e.attr("data-type") && i.init.call(e, t), e }, gj.tree.widget.prototype = new gj.widget, gj.tree.widget.constructor = gj.tree.widget, jQuery.fn.tree = function (e) { var t; if (this && this.length) { if ("object" != typeof e && e) { if ((t = new gj.tree.widget(this, null))[e]) return t[e].apply(this, Array.prototype.slice.call(arguments, 1)); throw "Method " + e + " does not exist." } return new gj.tree.widget(this, e) } }, gj.tree.plugins.checkboxes = { config: { base: { checkboxes: void 0, checkedField: "checked", cascadeCheck: !0 } }, private: { dataBound: function (e) { var t; e.data("cascadeCheck") && (t = e.find('li[data-role="node"]'), $.each(t, function () { var e = $(this), t = e.find('[data-role="checkbox"] input[type="checkbox"]').checkbox("state"); "checked" === t && (gj.tree.plugins.checkboxes.private.updateChildrenState(e, t), gj.tree.plugins.checkboxes.private.updateParentState(e, t)) })) }, nodeDataBound: function (e, t, i, a) { var r, n, o, d, s; 0 === t.find('> [data-role="wrapper"] > [data-role="checkbox"]').length && (r = e.data(), n = t.find('> [data-role="wrapper"] > [data-role="expander"]'), o = $('<input type="checkbox"/>'), d = $('<span data-role="checkbox"></span>').append(o), s = void 0 !== a[r.disabledField] && "true" === a[r.disabledField].toString().toLowerCase(), o = o.checkbox({ uiLibrary: r.uiLibrary, iconsLibrary: r.iconsLibrary, change: function (i, r) { gj.tree.plugins.checkboxes.events.checkboxChange(e, t, a, o.state()) } }), s && o.prop("disabled", !0), a[r.checkedField] && o.state("checked"), o.on("click", function (e) { var t = o.closest("li"), i = o.state(); r.cascadeCheck && (gj.tree.plugins.checkboxes.private.updateChildrenState(t, i), gj.tree.plugins.checkboxes.private.updateParentState(t, i)) }), n.after(d)) }, updateParentState: function (e, t) { var i, a, r, n, o, d; 1 === (i = e.parent("ul").parent("li")).length && (a = e.parent("ul").parent("li").find('> [data-role="wrapper"] > [data-role="checkbox"] input[type="checkbox"]'), r = e.siblings().find('> [data-role="wrapper"] > span[data-role="checkbox"] input[type="checkbox"]'), n = "checked" === t, o = "unchecked" === t, d = "indeterminate", $.each(r, function () { var e = $(this).checkbox("state"); n && "checked" !== e && (n = !1), o && "unchecked" !== e && (o = !1) }), n && !o && (d = "checked"), !n && o && (d = "unchecked"), a.checkbox("state", d), gj.tree.plugins.checkboxes.private.updateParentState(i, a.checkbox("state"))) }, updateChildrenState: function (e, t) { var i = e.find('ul li [data-role="wrapper"] [data-role="checkbox"] input[type="checkbox"]'); i.length > 0 && $.each(i, function () { $(this).checkbox("state", t) }) }, update: function (e, t, i) { var a = t.find('[data-role="checkbox"] input[type="checkbox"]').first(); $(a).checkbox("state", i), e.data().cascadeCheck && (gj.tree.plugins.checkboxes.private.updateChildrenState(t, i), gj.tree.plugins.checkboxes.private.updateParentState(t, i)) } }, public: { getCheckedNodes: function () { var e = [], t = this.find('li [data-role="checkbox"] input[type="checkbox"]'); return $.each(t, function () { var t = $(this); "checked" === t.checkbox("state") && e.push(t.closest("li").data("id")) }), e }, checkAll: function () { var e = this.find('li [data-role="checkbox"] input[type="checkbox"]'); return $.each(e, function () { $(this).checkbox("state", "checked") }), this }, uncheckAll: function () { var e = this.find('li [data-role="checkbox"] input[type="checkbox"]'); return $.each(e, function () { $(this).checkbox("state", "unchecked") }), this }, check: function (e) { return gj.tree.plugins.checkboxes.private.update(this, e, "checked"), this }, uncheck: function (e) { return gj.tree.plugins.checkboxes.private.update(this, e, "unchecked"), this } }, events: { checkboxChange: function (e, t, i, a) { return e.triggerHandler("checkboxChange", [t, i, a]) } }, configure: function (e) { e.data("checkboxes") && gj.checkbox && ($.extend(!0, e, gj.tree.plugins.checkboxes.public), e.on("nodeDataBound", function (t, i, a, r) { gj.tree.plugins.checkboxes.private.nodeDataBound(e, i, a, r) }), e.on("dataBound", function () { gj.tree.plugins.checkboxes.private.dataBound(e) }), e.on("enable", function (e, t) { t.find('>[data-role="wrapper"]>[data-role="checkbox"] input[type="checkbox"]').prop("disabled", !1) }), e.on("disable", function (e, t) { t.find('>[data-role="wrapper"]>[data-role="checkbox"] input[type="checkbox"]').prop("disabled", !0) })) } }, gj.tree.plugins.dragAndDrop = { config: { base: { dragAndDrop: void 0, style: { dragEl: "gj-tree-drag-el gj-tree-md-drag-el", dropAsChildIcon: "gj-cursor-pointer gj-icon plus", dropAbove: "gj-tree-drop-above", dropBelow: "gj-tree-drop-below" } }, bootstrap: { style: { dragEl: "gj-tree-drag-el gj-tree-bootstrap-drag-el", dropAsChildIcon: "glyphicon glyphicon-plus", dropAbove: "drop-above", dropBelow: "drop-below" } }, bootstrap4: { style: { dragEl: "gj-tree-drag-el gj-tree-bootstrap-drag-el", dropAsChildIcon: "gj-cursor-pointer gj-icon plus", dropAbove: "drop-above", dropBelow: "drop-below" } } }, private: { nodeDataBound: function (e, t) { var i = t.children('[data-role="wrapper"]'), a = t.find('>[data-role="wrapper"]>[data-role="display"]'); i.length && a.length && (a.on("mousedown", gj.tree.plugins.dragAndDrop.private.createNodeMouseDownHandler(e)), a.on("mousemove", gj.tree.plugins.dragAndDrop.private.createNodeMouseMoveHandler(e, t, a)), a.on("mouseup", gj.tree.plugins.dragAndDrop.private.createNodeMouseUpHandler(e))) }, createNodeMouseDownHandler: function (e) { return function (t) { e.data("dragReady", !0) } }, createNodeMouseUpHandler: function (e) { return function (t) { e.data("dragReady", !1) } }, createNodeMouseMoveHandler: function (e, t, i) { return function (a) { if (e.data("dragReady")) { var r, n, o, d, s = e.data(); e.data("dragReady", !1), r = i.clone().wrap('<div data-role="wrapper"/>').closest("div").wrap('<li class="' + s.style.item + '" />').closest("li").wrap('<ul class="' + s.style.list + '" />').closest("ul"), $("body").append(r), r.attr("data-role", "draggable-clone").addClass("gj-unselectable").addClass(s.style.dragEl), r.find('[data-role="wrapper"]').prepend('<span data-role="indicator" />'), r.draggable({ drag: gj.tree.plugins.dragAndDrop.private.createDragHandler(e, t, i), stop: gj.tree.plugins.dragAndDrop.private.createDragStopHandler(e, t, i) }), n = i.parent(), o = i.offset().top, o -= parseInt(n.css("border-top-width")) + parseInt(n.css("margin-top")) + parseInt(n.css("padding-top")), d = i.offset().left, d -= parseInt(n.css("border-left-width")) + parseInt(n.css("margin-left")) + parseInt(n.css("padding-left")), d -= r.find('[data-role="indicator"]').outerWidth(!0), r.css({ position: "absolute", top: o, left: d, width: i.outerWidth(!0) }), "true" === i.attr("data-droppable") && i.droppable("destroy"), gj.tree.plugins.dragAndDrop.private.getTargetDisplays(e, t, i).each(function () { var e = $(this); "true" === e.attr("data-droppable") && e.droppable("destroy"), e.droppable() }), gj.tree.plugins.dragAndDrop.private.getTargetDisplays(e, t).each(function () { var e = $(this); "true" === e.attr("data-droppable") && e.droppable("destroy"), e.droppable() }), r.trigger("mousedown") } } }, getTargetDisplays: function (e, t, i) { return e.find('[data-role="display"]').not(i).not(t.find('[data-role="display"]')) }, getTargetWrappers: function (e, t) { return e.find('[data-role="wrapper"]').not(t.find('[data-role="wrapper"]')) }, createDragHandler: function (e, t, i) { var a = gj.tree.plugins.dragAndDrop.private.getTargetDisplays(e, t, i), r = gj.tree.plugins.dragAndDrop.private.getTargetWrappers(e, t), n = e.data(); return function (e, t, i) { var o = $(this), d = !1; a.each(function () { var e; if ($(this).droppable("isOver", i)) return e = o.find('[data-role="indicator"]'), n.style.dropAsChildIcon ? e.addClass(n.style.dropAsChildIcon) : e.text("+"), d = !0, !1; o.find('[data-role="indicator"]').removeClass(n.style.dropAsChildIcon).empty() }), r.each(function () { var e, t = $(this); !d && t.droppable("isOver", i) ? (e = t.position().top + t.outerHeight() / 2, i.y < e ? t.addClass(n.style.dropAbove).removeClass(n.style.dropBelow) : t.addClass(n.style.dropBelow).removeClass(n.style.dropAbove)) : t.removeClass(n.style.dropAbove).removeClass(n.style.dropBelow) }) } }, createDragStopHandler: function (e, t, i) { var a = gj.tree.plugins.dragAndDrop.private.getTargetDisplays(e, t, i), r = gj.tree.plugins.dragAndDrop.private.getTargetWrappers(e, t), n = e.data(); return function (i, o) { var d, s, l, g, c = !1; $(this).draggable("destroy").remove(), a.each(function () { var i, a = $(this); if (a.droppable("isOver", o)) return s = a.closest("li"), l = t.parent("ul").parent("li"), 0 === (i = s.children("ul")).length && (i = $("<ul />").addClass(n.style.list), s.append(i)), !1 !== gj.tree.plugins.dragAndDrop.events.nodeDrop(e, t.data("id"), s.data("id"), i.children("li").length + 1) && (i.append(t), d = e.getDataById(t.data("id")), gj.tree.methods.removeDataById(e, t.data("id"), n.records), void 0 === (g = e.getDataById(i.parent().data("id")))[n.childrenField] && (g[n.childrenField] = []), g[n.childrenField].push(d), gj.tree.plugins.dragAndDrop.private.refresh(e, t, s, l)), c = !0, !1; a.droppable("destroy") }), c || r.each(function () { var i, a, r, g = $(this); if (g.droppable("isOver", o)) return s = g.closest("li"), l = t.parent("ul").parent("li"), i = o.y < g.position().top + g.outerHeight() / 2, r = t.data("id"), a = s.prevAll('li:not([data-id="' + r + '"])').length + (i ? 1 : 2), !1 !== gj.tree.plugins.dragAndDrop.events.nodeDrop(e, r, s.parent("ul").parent("li").data("id"), a) && (d = e.getDataById(t.data("id")), gj.tree.methods.removeDataById(e, t.data("id"), n.records), e.getDataById(s.parent().data("id"))[n.childrenField].splice(s.index() + (i ? 0 : 1), 0, d), i ? t.insertBefore(s) : t.insertAfter(s), gj.tree.plugins.dragAndDrop.private.refresh(e, t, s, l)), !1; g.droppable("destroy") }) } }, refresh: function (e, t, i, a) { var r = e.data(); gj.tree.plugins.dragAndDrop.private.refreshNode(e, i), gj.tree.plugins.dragAndDrop.private.refreshNode(e, a), gj.tree.plugins.dragAndDrop.private.refreshNode(e, t), t.find('li[data-role="node"]').each(function () { gj.tree.plugins.dragAndDrop.private.refreshNode(e, $(this)) }), i.children('[data-role="wrapper"]').removeClass(r.style.dropAbove).removeClass(r.style.dropBelow) }, refreshNode: function (e, t) { var i = t.children('[data-role="wrapper"]'), a = i.children('[data-role="expander"]'), r = i.children('[data-role="spacer"]'), n = t.children("ul"), o = e.data(), d = t.parentsUntil('[data-type="tree"]', "ul").length; n.length && n.children().length ? n.is(":visible") ? a.empty().append(o.icons.collapse) : a.empty().append(o.icons.expand) : a.empty(), i.removeClass(o.style.dropAbove).removeClass(o.style.dropBelow), r.css("width", o.indentation * (d - 1)) } }, public: {}, events: { nodeDrop: function (e, t, i, a) { return e.triggerHandler("nodeDrop", [t, i, a]) } }, configure: function (e) { $.extend(!0, e, gj.tree.plugins.dragAndDrop.public), e.data("dragAndDrop") && gj.draggable && gj.droppable && e.on("nodeDataBound", function (t, i) { gj.tree.plugins.dragAndDrop.private.nodeDataBound(e, i) }) } }, gj.tree.plugins.lazyLoading = { config: { base: { paramNames: { parentId: "parentId" }, lazyLoading: !1 } }, private: { nodeDataBound: function (e, t, i, a) { var r = e.data(), n = t.find('> [data-role="wrapper"] > [data-role="expander"]'); a.hasChildren && n.empty().append(r.icons.expand) }, createDoneHandler: function (e, t) { return function (i) { var a, r, n, o = e.data(); if ("string" == typeof i && JSON && (i = JSON.parse(i)), i && i.length) { for (0 === (n = t.children("ul")).length && (n = $("<ul />").addClass(o.style.list), t.append(n)), a = 0; a < i.length; a++)e.addNode(i[a], n); (r = t.find('>[data-role="wrapper"]>[data-role="expander"]')).attr("data-mode", "open"), r.empty().append(o.icons.collapse), gj.tree.events.dataBound(e) } } }, expand: function (e, t, i) { var a, r = e.data(), n = {}, o = t.find(">ul>li"); o && o.length || "string" == typeof r.dataSource && (n[r.paramNames.parentId] = i, a = { url: r.dataSource, data: n }, e.xhr && e.xhr.abort(), e.xhr = $.ajax(a).done(gj.tree.plugins.lazyLoading.private.createDoneHandler(e, t)).fail(e.createErrorHandler())) } }, public: {}, events: {}, configure: function (e, t, i) { i.lazyLoading && (e.on("nodeDataBound", function (t, i, a, r) { gj.tree.plugins.lazyLoading.private.nodeDataBound(e, i, a, r) }), e.on("expand", function (t, i, a) { gj.tree.plugins.lazyLoading.private.expand(e, i, a) })) } }, gj.checkbox = { plugins: {} }, gj.checkbox.config = { base: { uiLibrary: "materialdesign", iconsLibrary: "materialicons", style: { wrapperCssClass: "gj-checkbox-md", spanCssClass: void 0 } }, bootstrap: { style: { wrapperCssClass: "gj-checkbox-bootstrap" }, iconsLibrary: "glyphicons" }, bootstrap4: { style: { wrapperCssClass: "gj-checkbox-bootstrap gj-checkbox-bootstrap-4" }, iconsLibrary: "materialicons" }, materialicons: { style: { iconsCssClass: "gj-checkbox-material-icons", spanCssClass: "gj-icon" } }, glyphicons: { style: { iconsCssClass: "gj-checkbox-glyphicons", spanCssClass: "" } }, fontawesome: { style: { iconsCssClass: "gj-checkbox-fontawesome", spanCssClass: "fa" } } }, gj.checkbox.methods = { init: function (e) { return gj.widget.prototype.init.call(this, e, "checkbox"), this.attr("data-checkbox", "true"), gj.checkbox.methods.initialize(this), this }, initialize: function (e) { var t, i, a = e.data(); a.style.wrapperCssClass && (t = $('<label class="' + a.style.wrapperCssClass + " " + a.style.iconsCssClass + '"></label>'), e.attr("id") && t.attr("for", e.attr("id")), e.wrap(t), i = $("<span />"), a.style.spanCssClass && i.addClass(a.style.spanCssClass), e.parent().append(i)) }, state: function (e, t) { return t ? ("checked" === t ? (e.prop("indeterminate", !1), e.prop("checked", !0)) : "unchecked" === t ? (e.prop("indeterminate", !1), e.prop("checked", !1)) : "indeterminate" === t && (e.prop("checked", !0), e.prop("indeterminate", !0)), gj.checkbox.events.change(e, t), e) : t = e.prop("indeterminate") ? "indeterminate" : e.prop("checked") ? "checked" : "unchecked" }, toggle: function (e) { return "checked" == e.state() ? e.state("unchecked") : e.state("checked"), e }, destroy: function (e) { return "true" === e.attr("data-checkbox") && (e.removeData(), e.removeAttr("data-guid"), e.removeAttr("data-checkbox"), e.off(), e.next("span").remove(), e.unwrap()), e } }, gj.checkbox.events = { change: function (e, t) { return e.triggerHandler("change", [t]) } }, gj.checkbox.widget = function (e, t) { var i = gj.checkbox.methods; return this.toggle = function () { return i.toggle(this) }, this.state = function (e) { return i.state(this, e) }, this.destroy = function () { return i.destroy(this) }, $.extend(e, this), "true" !== e.attr("data-checkbox") && i.init.call(e, t), e }, gj.checkbox.widget.prototype = new gj.widget, gj.checkbox.widget.constructor = gj.checkbox.widget, jQuery.fn.checkbox = function (e) { var t; if (this && this.length) { if ("object" != typeof e && e) { if ((t = new gj.checkbox.widget(this, null))[e]) return t[e].apply(this, Array.prototype.slice.call(arguments, 1)); throw "Method " + e + " does not exist." } return new gj.checkbox.widget(this, e) } }, gj.editor = { plugins: {}, messages: {} }, gj.editor.config = { base: { height: 300, width: void 0, uiLibrary: "materialdesign", iconsLibrary: "materialicons", locale: "en-us", buttons: void 0, style: { wrapper: "gj-editor gj-editor-md", buttonsGroup: "gj-button-md-group", button: "gj-button-md", buttonActive: "active" } }, bootstrap: { style: { wrapper: "gj-editor gj-editor-bootstrap", buttonsGroup: "btn-group", button: "btn btn-default gj-cursor-pointer", buttonActive: "active" } }, bootstrap4: { style: { wrapper: "gj-editor gj-editor-bootstrap", buttonsGroup: "btn-group", button: "btn btn-outline-secondary gj-cursor-pointer", buttonActive: "active" } }, materialicons: { icons: { bold: '<i class="gj-icon bold" />', italic: '<i class="gj-icon italic" />', strikethrough: '<i class="gj-icon strikethrough" />', underline: '<i class="gj-icon underlined" />', listBulleted: '<i class="gj-icon list-bulleted" />', listNumbered: '<i class="gj-icon list-numbered" />', indentDecrease: '<i class="gj-icon indent-decrease" />', indentIncrease: '<i class="gj-icon indent-increase" />', alignLeft: '<i class="gj-icon align-left" />', alignCenter: '<i class="gj-icon align-center" />', alignRight: '<i class="gj-icon align-right" />', alignJustify: '<i class="gj-icon align-justify" />', undo: '<i class="gj-icon undo" />', redo: '<i class="gj-icon redo" />' } }, fontawesome: { icons: { bold: '<i class="fa fa-bold" aria-hidden="true"></i>', italic: '<i class="fa fa-italic" aria-hidden="true"></i>', strikethrough: '<i class="fa fa-strikethrough" aria-hidden="true"></i>', underline: '<i class="fa fa-underline" aria-hidden="true"></i>', listBulleted: '<i class="fa fa-list-ul" aria-hidden="true"></i>', listNumbered: '<i class="fa fa-list-ol" aria-hidden="true"></i>', indentDecrease: '<i class="fa fa-indent" aria-hidden="true"></i>', indentIncrease: '<i class="fa fa-outdent" aria-hidden="true"></i>', alignLeft: '<i class="fa fa-align-left" aria-hidden="true"></i>', alignCenter: '<i class="fa fa-align-center" aria-hidden="true"></i>', alignRight: '<i class="fa fa-align-right" aria-hidden="true"></i>', alignJustify: '<i class="fa fa-align-justify" aria-hidden="true"></i>', undo: '<i class="fa fa-undo" aria-hidden="true"></i>', redo: '<i class="fa fa-repeat" aria-hidden="true"></i>' } } }, gj.editor.methods = { init: function (e) { return gj.widget.prototype.init.call(this, e, "editor"), this.attr("data-editor", "true"), gj.editor.methods.initialize(this), this }, initialize: function (e) { var t, i, a, r, n, o = this, d = e.data(); if (e.hide(), "wrapper" !== e[0].parentElement.attributes.role && ((a = document.createElement("div")).setAttribute("role", "wrapper"), e[0].parentNode.insertBefore(a, e[0]), a.appendChild(e[0])), gj.editor.methods.localization(d), $(a).addClass(d.style.wrapper), d.width && $(a).width(d.width), 0 === (r = $(a).children('div[role="body"]')).length && (r = $('<div role="body"></div>'), $(a).append(r), e[0].innerText && (r[0].innerHTML = e[0].innerText)), r.attr("contenteditable", !0), r.on("keydown", function (t) { var i = event.keyCode || event.charCode; !1 === gj.editor.events.changing(e) && 8 !== i && 46 !== i && t.preventDefault() }), r.on("mouseup keyup mouseout cut paste", function (t) { o.updateToolbar(e, n), gj.editor.events.changed(e), e.html(r.html()) }), 0 === (n = $(a).children('div[role="toolbar"]')).length) for (var s in n = $('<div role="toolbar"></div>'), r.before(n), d.buttons) { for (var l in t = $("<div />").addClass(d.style.buttonsGroup), d.buttons[s]) (i = $(d.buttons[s][l])).on("click", function () { gj.editor.methods.executeCmd(e, r, n, $(this)) }), t.append(i); n.append(t) } r.height(d.height - gj.core.height(n[0], !0)) }, localization: function (e) { var t = gj.editor.messages[e.locale]; void 0 === e.buttons && (e.buttons = [['<button type="button" class="' + e.style.button + '" title="' + t.bold + '" role="bold">' + e.icons.bold + "</button>", '<button type="button" class="' + e.style.button + '" title="' + t.italic + '" role="italic">' + e.icons.italic + "</button>", '<button type="button" class="' + e.style.button + '" title="' + t.strikethrough + '" role="strikethrough">' + e.icons.strikethrough + "</button>", '<button type="button" class="' + e.style.button + '" title="' + t.underline + '" role="underline">' + e.icons.underline + "</button>"], ['<button type="button" class="' + e.style.button + '" title="' + t.listBulleted + '" role="insertunorderedlist">' + e.icons.listBulleted + "</button>", '<button type="button" class="' + e.style.button + '" title="' + t.listNumbered + '" role="insertorderedlist">' + e.icons.listNumbered + "</button>", '<button type="button" class="' + e.style.button + '" title="' + t.indentDecrease + '" role="outdent">' + e.icons.indentDecrease + "</button>", '<button type="button" class="' + e.style.button + '" title="' + t.indentIncrease + '" role="indent">' + e.icons.indentIncrease + "</button>"], ['<button type="button" class="' + e.style.button + '" title="' + t.alignLeft + '" role="justifyleft">' + e.icons.alignLeft + "</button>", '<button type="button" class="' + e.style.button + '" title="' + t.alignCenter + '" role="justifycenter">' + e.icons.alignCenter + "</button>", '<button type="button" class="' + e.style.button + '" title="' + t.alignRight + '" role="justifyright">' + e.icons.alignRight + "</button>", '<button type="button" class="' + e.style.button + '" title="' + t.alignJustify + '" role="justifyfull">' + e.icons.alignJustify + "</button>"], ['<button type="button" class="' + e.style.button + '" title="' + t.undo + '" role="undo">' + e.icons.undo + "</button>", '<button type="button" class="' + e.style.button + '" title="' + t.redo + '" role="redo">' + e.icons.redo + "</button>"]]) }, updateToolbar: function (e, t) { var i = e.data(); $buttons = t.find("[role]").each(function () { var e = $(this), t = e.attr("role"); t && document.queryCommandEnabled(t) && "true" === document.queryCommandValue(t) ? e.addClass(i.style.buttonActive) : e.removeClass(i.style.buttonActive) }) }, executeCmd: function (e, t, i, a) { t.focus(), document.execCommand(a.attr("role"), !1), gj.editor.methods.updateToolbar(e, i) }, content: function (e, t) { var i = e.parent().children('div[role="body"]'); return void 0 === t ? i.html() : i.html(t) }, destroy: function (e) { var t; return "true" === e.attr("data-editor") && ((t = e.parent()).children('div[role="body"]').remove(), t.children('div[role="toolbar"]').remove(), e.unwrap(), e.removeData(), e.removeAttr("data-guid"), e.removeAttr("data-editor"), e.off(), e.show()), e } }, gj.editor.events = { changing: function (e) { return e.triggerHandler("changing") }, changed: function (e) { return e.triggerHandler("changed") } }, gj.editor.widget = function (e, t) { var i = gj.editor.methods; return this.content = function (e) { return i.content(this, e) }, this.destroy = function () { return i.destroy(this) }, $.extend(e, this), "true" !== e.attr("data-editor") && i.init.call(e, t), e }, gj.editor.widget.prototype = new gj.widget, gj.editor.widget.constructor = gj.editor.widget, jQuery.fn.editor = function (e) { var t; if (this && this.length) { if ("object" != typeof e && e) { if ((t = new gj.editor.widget(this, null))[e]) return t[e].apply(this, Array.prototype.slice.call(arguments, 1)); throw "Method " + e + " does not exist." } return new gj.editor.widget(this, e) } }, gj.editor.messages["en-us"] = { bold: "Bold", italic: "Italic", strikethrough: "Strikethrough", underline: "Underline", listBulleted: "List Bulleted", listNumbered: "List Numbered", indentDecrease: "Indent Decrease", indentIncrease: "Indent Increase", alignLeft: "Align Left", alignCenter: "Align Center", alignRight: "Align Right", alignJustify: "Align Justify", undo: "Undo", redo: "Redo" };